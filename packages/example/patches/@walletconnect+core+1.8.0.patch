diff --git a/node_modules/@walletconnect/core/dist/esm/index.js b/node_modules/@walletconnect/core/dist/esm/index.js
index 23da9cb..946a546 100644
--- a/node_modules/@walletconnect/core/dist/esm/index.js
+++ b/node_modules/@walletconnect/core/dist/esm/index.js
@@ -7,6 +7,7 @@ import { getBridgeUrl } from "./url";
 class Connector {
     constructor(opts) {
         this.protocol = "wc";
+        this.network = undefined;
         this.version = 1;
         this._bridge = "";
         this._key = null;
@@ -148,10 +149,11 @@ class Connector {
         if (!value) {
             return;
         }
-        const { handshakeTopic, bridge, key } = this._parseUri(value);
+        const { handshakeTopic, bridge, key, network } = this._parseUri(value);
         this.handshakeTopic = handshakeTopic;
         this.bridge = bridge;
         this.key = key;
+        this.network = network;
     }
     set chainId(value) {
         this._chainId = value;
@@ -296,6 +298,9 @@ class Connector {
         if (this.pending) {
             return;
         }
+        if(opts.network){
+            this.network = opts.network;
+        }
         this._key = await this._generateKey();
         const request = this._formatRequest({
             method: "wc_sessionRequest",
@@ -818,7 +823,10 @@ class Connector {
         const version = this.version;
         const bridge = encodeURIComponent(this.bridge);
         const key = this.key;
-        const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;
+        let uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`
+        if(this.network){
+            uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}&network=${this.network}`;
+        }
         return uri;
     }
     _parseUri(uri) {
