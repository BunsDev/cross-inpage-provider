{"version":3,"file":"static/chunks/8146.c072c0a85c210e00.js","mappings":"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","sources":["webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/dist/ProviderSuiBase.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/dist/types.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/dist/OnekeySuiProvider.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/node_modules/@mysten/wallet-standard/dist/index.mjs","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/dist/OnekeySuiStandardWallet.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-sui-provider/dist/index.js","webpack://_N_E/./components/sui/dapps.config.ts","webpack://_N_E/./components/sui/SuiExample.tsx","webpack://_N_E/./components/sui/utils.ts","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/tweetnacl|crypto","webpack://_N_E/./node_modules/@onekeyfe/extension-bridge-injected/dist/JsBridgeExtInjected.js","webpack://_N_E/./node_modules/@onekeyfe/extension-bridge-injected/dist/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport styles from '../../styles/Home.module.css';\n\ninterface DApp {\n  name: string;\n  url: string;\n}\n\ninterface Props {\n  dapps: DApp[];\n}\n\nfunction DAppList(props: Props) {\n  const { dapps } = props;\n\n  return (\n    <div className={styles.container}>\n      <h3>Top DApps</h3>\n      <ul>\n        {dapps.map((dapp) => (\n          <li key={dapp.name}>\n            <a href={dapp.url} target={'_blank'}>\n              {dapp.name} ↗\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { DAppList };\n","import { IInjectedProviderNames } from '@onekeyfe/cross-inpage-provider-types';\nimport { ProviderBase } from '@onekeyfe/cross-inpage-provider-core';\nclass ProviderSuiBase extends ProviderBase {\n    constructor(props) {\n        super(props);\n        this.providerName = IInjectedProviderNames.sui;\n    }\n    request(data) {\n        return this.bridgeRequest(data);\n    }\n}\nexport { ProviderSuiBase };\n","export const ALL_PERMISSION_TYPES = ['viewAccount', 'suggestTransactions'];\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { bytesToHex } from '@noble/hashes/utils';\nimport { getOrCreateExtInjectedJsBridge } from '@onekeyfe/extension-bridge-injected';\nimport { ProviderSuiBase } from './ProviderSuiBase';\nimport { web3Errors } from '@onekeyfe/cross-inpage-provider-errors';\nimport { ALL_PERMISSION_TYPES } from './types';\nconst PROVIDER_EVENTS = {\n    'connect': 'connect',\n    'disconnect': 'disconnect',\n    'accountChanged': 'accountChanged',\n    'networkChange': 'networkChange',\n    'message_low_level': 'message_low_level',\n};\nfunction isWalletEventMethodMatch({ method, name }) {\n    return method === `wallet_events_${name}`;\n}\nclass ProviderSui extends ProviderSuiBase {\n    constructor(props) {\n        super(Object.assign(Object.assign({}, props), { bridge: props.bridge || getOrCreateExtInjectedJsBridge({ timeout: props.timeout }) }));\n        this._account = null;\n        this._registerEvents();\n    }\n    _registerEvents() {\n        window.addEventListener('onekey_bridge_disconnect', () => {\n            this._handleDisconnected();\n        });\n        this.on(PROVIDER_EVENTS.message_low_level, (payload) => {\n            if (!payload)\n                return;\n            const { method, params } = payload;\n            if (isWalletEventMethodMatch({ method, name: PROVIDER_EVENTS.accountChanged })) {\n                this._handleAccountChange(params);\n            }\n            if (isWalletEventMethodMatch({ method, name: PROVIDER_EVENTS.networkChange })) {\n                this._handleNetworkChange(params);\n            }\n        });\n    }\n    _callBridge(params) {\n        return this.bridgeRequest(params);\n    }\n    _handleConnected(account, options = { emit: true }) {\n        this._account = account;\n        if (options.emit && this.isConnectionStatusChanged('connected')) {\n            this.connectionStatus = 'connected';\n            const address = account !== null && account !== void 0 ? account : null;\n            this.emit('connect', address.address);\n            this.emit('accountChanged', address.address);\n        }\n    }\n    _handleDisconnected(options = { emit: true }) {\n        this._account = null;\n        if (options.emit && this.isConnectionStatusChanged('disconnected')) {\n            this.connectionStatus = 'disconnected';\n            this.emit('disconnect');\n            this.emit('accountChanged', null);\n        }\n    }\n    isAccountsChanged(account) {\n        var _a;\n        return (account === null || account === void 0 ? void 0 : account.address) !== ((_a = this._account) === null || _a === void 0 ? void 0 : _a.address);\n    }\n    // trigger by bridge account change event\n    _handleAccountChange(payload) {\n        const account = payload;\n        if (this.isAccountsChanged(account)) {\n            this.emit('accountChanged', (account === null || account === void 0 ? void 0 : account.address) || null);\n        }\n        if (!account) {\n            this._handleDisconnected();\n            return;\n        }\n        this._handleConnected(account, { emit: false });\n    }\n    isNetworkChanged(network) {\n        return this._network === undefined || network !== this._network;\n    }\n    _handleNetworkChange(payload) {\n        const network = payload;\n        if (this.isNetworkChanged(network)) {\n            this.emit('networkChange', network || null);\n        }\n        this._network = network;\n    }\n    hasPermissions(permissions = ALL_PERMISSION_TYPES) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'hasPermissions',\n                params: permissions,\n            });\n        });\n    }\n    requestPermissions(permissions = ALL_PERMISSION_TYPES) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'requestPermissions',\n                params: permissions,\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._callBridge({\n                method: 'disconnect',\n                params: void 0,\n            });\n            this._handleDisconnected();\n        });\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = yield this._callBridge({\n                method: 'getAccounts',\n                params: undefined,\n            });\n            if (accounts.length === 0) {\n                this._handleDisconnected();\n                throw web3Errors.provider.unauthorized();\n            }\n            this._handleConnected(accounts[0]);\n            return accounts;\n        });\n    }\n    getActiveChain() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getActiveChain',\n                params: undefined,\n            });\n        });\n    }\n    signAndExecuteTransactionBlock(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'signAndExecuteTransactionBlock',\n                params: Object.assign(Object.assign({}, input), { walletSerialize: JSON.stringify(input.account), blockSerialize: input.transactionBlock.serialize() }),\n            });\n        });\n    }\n    signTransactionBlock(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'signTransactionBlock',\n                params: Object.assign(Object.assign({}, input), { walletSerialize: JSON.stringify(input.account), blockSerialize: input.transactionBlock.serialize() }),\n            });\n        });\n    }\n    signMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'signMessage',\n                params: Object.assign(Object.assign({}, input), { walletSerialize: JSON.stringify(input.account), messageSerialize: bytesToHex(input.message) }),\n            });\n        });\n    }\n    isConnected() {\n        return this._account !== null;\n    }\n    onNetworkChange(listener) {\n        return super.on(PROVIDER_EVENTS.networkChange, listener);\n    }\n    onAccountChange(listener) {\n        return super.on(PROVIDER_EVENTS.accountChanged, listener);\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    emit(event, ...args) {\n        return super.emit(event, ...args);\n    }\n}\nexport { ProviderSui };\n","// src/index.ts\nexport * from \"@wallet-standard/core\";\n\n// src/detect.ts\nvar REQUIRED_FEATURES = [\n  \"standard:connect\",\n  \"standard:events\"\n];\nfunction isStandardWalletAdapterCompatibleWallet(wallet, features = []) {\n  return [...REQUIRED_FEATURES, ...features].every((feature) => feature in wallet.features);\n}\n\n// src/chains.ts\nvar SUI_DEVNET_CHAIN = \"sui:devnet\";\nvar SUI_TESTNET_CHAIN = \"sui:testnet\";\nvar SUI_LOCALNET_CHAIN = \"sui:localnet\";\nvar SUI_MAINNET_CHAIN = \"sui:mainnet\";\nvar SUI_CHAINS = [\n  SUI_DEVNET_CHAIN,\n  SUI_TESTNET_CHAIN,\n  SUI_LOCALNET_CHAIN,\n  SUI_MAINNET_CHAIN\n];\nexport {\n  SUI_CHAINS,\n  SUI_DEVNET_CHAIN,\n  SUI_LOCALNET_CHAIN,\n  SUI_MAINNET_CHAIN,\n  SUI_TESTNET_CHAIN,\n  isStandardWalletAdapterCompatibleWallet\n};\n//# sourceMappingURL=index.mjs.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexToBytes } from '@noble/hashes/utils';\nimport mitt from 'mitt';\nimport { ReadonlyWalletAccount, registerWallet, SUI_DEVNET_CHAIN, SUI_TESTNET_CHAIN, } from '@mysten/wallet-standard';\nimport { ALL_PERMISSION_TYPES } from './types';\nvar Feature;\n(function (Feature) {\n    Feature[\"STANDARD__CONNECT\"] = \"standard:connect\";\n    Feature[\"STANDARD__DISCONNECT\"] = \"standard:disconnect\";\n    Feature[\"STANDARD__EVENTS\"] = \"standard:events\";\n    Feature[\"SUI__SIGN_AND_EXECUTE_TRANSACTION_BLOCK\"] = \"sui:signAndExecuteTransactionBlock\";\n    Feature[\"SUI__SIGN_TRANSACTION_BLOCK\"] = \"sui:signTransactionBlock\";\n    Feature[\"SUI__SIGN_MESSAGE\"] = \"sui:signMessage\";\n})(Feature || (Feature = {}));\nclass OnekeySuiStandardWallet {\n    constructor(provider, options) {\n        this.version = '1.0.0';\n        this._name = 'OneKey Wallet';\n        this.$on = (event, listener) => {\n            this._events.on(event, listener);\n            return () => this._events.off(event, listener);\n        };\n        this.$connected = () => __awaiter(this, void 0, void 0, function* () {\n            const activeChain = yield this.getActiveChain();\n            if (!(yield this.$hasPermissions(['viewAccount']))) {\n                return;\n            }\n            const accounts = yield this.provider.getAccounts();\n            const [account] = accounts;\n            const activateAccount = this._account;\n            if (activateAccount && activateAccount.address === account.address) {\n                return { accounts: this.accounts };\n            }\n            if (account) {\n                this._account = new ReadonlyWalletAccount({\n                    address: account.address,\n                    publicKey: hexToBytes(account.publicKey),\n                    chains: activeChain ? [activeChain] : [],\n                    features: [\n                        Feature.STANDARD__CONNECT,\n                        Feature.SUI__SIGN_AND_EXECUTE_TRANSACTION_BLOCK,\n                        Feature.SUI__SIGN_TRANSACTION_BLOCK,\n                        Feature.SUI__SIGN_MESSAGE,\n                    ],\n                });\n                this._events.emit('change', { accounts: this.accounts });\n                return { accounts: this.accounts };\n            }\n        });\n        this.$connect = (input) => __awaiter(this, void 0, void 0, function* () {\n            if (!(input === null || input === void 0 ? void 0 : input.silent)) {\n                yield this.provider.requestPermissions();\n            }\n            yield this.$connected();\n            return { accounts: this.accounts };\n        });\n        this.$disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            yield this.provider.disconnect();\n            this._account = null;\n            this._events.all.clear();\n        });\n        this.$signAndExecuteTransactionBlock = (input) => __awaiter(this, void 0, void 0, function* () {\n            return this.provider.signAndExecuteTransactionBlock(input);\n        });\n        this.$signTransactionBlock = (input) => __awaiter(this, void 0, void 0, function* () {\n            return this.provider.signTransactionBlock(input);\n        });\n        this.$signMessage = (input) => __awaiter(this, void 0, void 0, function* () {\n            return this.provider.signMessage(input);\n        });\n        this.provider = provider;\n        this._events = mitt();\n        this._account = null;\n        this.options = options;\n        this.subscribeEventFromBackend();\n        void this.$connected();\n    }\n    get name() {\n        var _a, _b;\n        return (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : this._name;\n    }\n    get icon() {\n        var _a;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-explicit-any\n        return (((_a = this.options) === null || _a === void 0 ? void 0 : _a.logo) || '');\n    }\n    get chains() {\n        return [SUI_DEVNET_CHAIN, SUI_TESTNET_CHAIN];\n    }\n    get accounts() {\n        return this._account ? [this._account] : [];\n    }\n    get features() {\n        return {\n            [Feature.STANDARD__CONNECT]: {\n                version: '1.0.0',\n                connect: this.$connect,\n            },\n            [Feature.STANDARD__DISCONNECT]: {\n                version: '1.0.0',\n                disconnect: this.$disconnect,\n            },\n            [Feature.STANDARD__EVENTS]: {\n                version: '1.0.0',\n                on: this.$on,\n            },\n            [Feature.SUI__SIGN_AND_EXECUTE_TRANSACTION_BLOCK]: {\n                version: '1.0.0',\n                signAndExecuteTransactionBlock: this.$signAndExecuteTransactionBlock,\n            },\n            [Feature.SUI__SIGN_TRANSACTION_BLOCK]: {\n                version: '1.0.0',\n                signTransactionBlock: this.$signTransactionBlock,\n            },\n            [Feature.SUI__SIGN_MESSAGE]: {\n                version: '1.0.0',\n                signMessage: this.$signMessage,\n            },\n        };\n    }\n    getActiveChain() {\n        return this.provider.getActiveChain();\n    }\n    $hasPermissions(permissions = ALL_PERMISSION_TYPES) {\n        return this.provider.hasPermissions(permissions);\n    }\n    subscribeEventFromBackend() {\n        this.provider.onNetworkChange((network) => {\n            if (!network)\n                return;\n            return this.handleNetworkSwitch({ network });\n        });\n    }\n    handleNetworkSwitch(payload) {\n        const { network } = payload;\n        this._events.emit('change', {\n            chains: [network],\n        });\n    }\n}\nexport function registerSuiWallet(provider, options) {\n    try {\n        registerWallet(new OnekeySuiStandardWallet(provider, options));\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n","export * from './OnekeySuiProvider';\nexport * from './ProviderSuiBase';\nexport { registerSuiWallet } from './OnekeySuiStandardWallet';\nexport * from './types';\n","export const dapps = [\n  {\n    name: 'Cetus',\n    url: 'https://app.cetus.zone/',\n  },\n  {\n    name: 'SuiSwap',\n    url: 'https://suiswap.app/',\n  },\n  {\n    name: 'Sui Names',\n    url: 'https://sui-names.com/',\n  },\n];\n","import React from 'react';\nimport { useState, useEffect, useMemo } from 'react';\nimport { ProviderSui } from '@onekeyfe/onekey-sui-provider';\n\nimport { DAppList } from '../dappList/DAppList';\nimport { dapps } from './dapps.config';\nimport { JsonRpcProvider, MoveCallTransaction, Connection } from '@mysten/sui.js';\nimport { buildTransfer } from './utils';\n\ndeclare global {\n  interface Window {\n    // @ts-expect-error\n    suiWallet: ProviderSui;\n  }\n}\n\nconst useProvider = () => {\n  const [provider, setProvider] = useState<ProviderSui>();\n\n  useEffect(() => {\n    const injectedProvider = window.suiWallet as ProviderSui;\n    const suiProvider =\n      injectedProvider ||\n      new ProviderSui({\n        // use mock api provider bridge for development\n        // bridge: new CustomBridge(),\n      });\n    setProvider(suiProvider);\n  }, []);\n\n  return provider;\n};\n\nconst INIT_MOVE_CALL: MoveCallTransaction = {\n  kind: 'MoveCall',\n  target: `0x0000000000000000000000000000000000000002::devnet_nft::mint`,\n  typeArguments: [],\n  arguments: [],\n};\n\nexport default function App() {\n  const provider = useProvider();\n\n  const [network, setNetwork] = useState<string>('TestNet');\n  const [connected, setConnected] = useState<boolean>(false);\n  const [address, setAddress] = useState<string | null>(null);\n\n  const [moveCall, setMoveCall] = useState<MoveCallTransaction>(INIT_MOVE_CALL);\n\n  const rpcProvider = useMemo(() => {\n    if (network.toLowerCase() === 'testnet') {\n      return new JsonRpcProvider(\n        new Connection({\n          fullnode: 'https://fullnode.testnet.sui.io',\n          faucet: 'https://faucet.testnet.sui.io/gas',\n        }),\n      );\n    } else {\n      return new JsonRpcProvider(\n        new Connection({\n          fullnode: 'https://fullnode.devnet.sui.io',\n          faucet: 'https://faucet.devnet.sui.io/gas',\n        }),\n      );\n    }\n  }, [network]);\n\n  useEffect(() => {\n    if (!provider) return;\n    // try to eagerly connect\n    // provider.connect().catch((err) => {\n    //     err;\n    //     // fail silently\n    // });\n\n    try {\n      provider.on('connect', (address: string) => {\n        setConnected(true);\n        setAddress(address);\n        console.log(`suiWallet.on [connect] ${address}`);\n      });\n    } catch (e) {\n      // ignore\n    }\n    try {\n      provider.on('disconnect', () => {\n        setAddress(null);\n        setConnected(false);\n        console.log('suiWallet.on [disconnect] 👋');\n      });\n    } catch (e) {\n      // ignore\n    }\n    try {\n      provider.on('networkChange', (network: string) => {\n        setNetwork(network);\n        console.log(`suiWallet.on [networkChange] ${network}`);\n      });\n    } catch (e) {\n      // ignore\n    }\n    try {\n      provider.on('accountChanged', (address: string) => {\n        setAddress(address);\n        setConnected(!!address);\n        console.log(`suiWallet.on [accountChange] ${address}`);\n      });\n    } catch (e) {\n      // ignore\n    }\n    return () => {\n      void provider.disconnect();\n    };\n  }, [provider]);\n\n  if (!provider) {\n    return <h2>Could not find a provider</h2>;\n  }\n\n  const hasPermissions = async () => {\n    try {\n      const has = await provider.hasPermissions();\n      console.log('[hasPermissions]', has);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] hasPermissions: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const requestPermissions = async () => {\n    try {\n      const has = await provider.requestPermissions();\n      console.log('[requestPermissions]', has);\n      return has;\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] requestPermissions: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const getAccounts = async () => {\n    try {\n      const accounts = await provider.getAccounts();\n      console.log('[getAccounts]', accounts);\n      return accounts;\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] getAccounts: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const has = await requestPermissions();\n      if (has) {\n        const accounts = await getAccounts();\n        setAddress(accounts[0]?.address ?? null);\n        setNetwork(network);\n        setConnected(true);\n\n        console.log('[connectWallet] account', accounts, network);\n      } else {\n        console.log('[error] connectWallet', has, network);\n      }\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] connectWallet: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const requestSuiFromFaucet = async () => {\n    try {\n      const faucet = await rpcProvider.requestSuiFromFaucet(address);\n      console.log('[requestSuiFromFaucet] faucet success:', faucet);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] requestSuiFromFaucet: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const disconnectWallet = async () => {\n    try {\n      await provider.disconnect();\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] disconnect: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const signAndExecuteTransaction = async () => {\n    try {\n      const transfer = await buildTransfer(rpcProvider, address, \"0xe40a5a0133cac4e9059f58f9d2074a3386d631390e40eadb43d2606e8975f3eb\", '100000');\n      // const res: unknown = await provider.signAndExecuteTransactionBlock({\n      //   transactionBlock: transfer,\n      // });\n\n      // console.log('[signAndExecuteTransaction]', res);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] signAndExecuteTransaction: ${JSON.stringify(err)}`);\n    }\n  };\n\n  return (\n    <div>\n      <DAppList dapps={dapps} />\n      {!provider && (\n        <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n          Install OneKey Extension →\n        </a>\n      )}\n      <main>\n        {provider && connected ? (\n          <>\n            <div>\n              <pre>\n                Network:{' '}\n                <select value={network} onChange={(e) => setNetwork(e.target.value)}>\n                  <option value=\"TestNet\">TestNet</option>\n                  <option value=\"DevNet\">DevNet</option>\n                </select>\n              </pre>\n              <pre>Connected as: {address}</pre>\n              <button onClick={requestSuiFromFaucet}>Faucet SUI</button>\n            </div>\n\n            <br />\n            <button onClick={hasPermissions}>Has Permissions</button>\n            <button onClick={requestPermissions}>Request Permissions</button>\n            <button onClick={getAccounts}>Get Accounts</button>\n            <button onClick={async () => await signAndExecuteTransaction()}>\n              Sign & Execute Transaction\n            </button>\n            <button onClick={() => disconnectWallet()}>Disconnect</button>\n\n            <br />\n            <br />\n            <div style={{ border: '1px solid #cccccc', flexDirection: 'column' }}>\n              <pre>\n                {/*<button onClick={customExecuteMoveCall}>Custom Execute MoveCall</button>*/}\n                {/*<button onClick={customExecuteSerializedMoveCall}>*/}\n                {/*  Custom Execute Serialized MoveCall*/}\n                {/*</button>*/}\n              </pre>\n              <textarea\n                rows={12}\n                cols={80}\n                value={JSON.stringify(moveCall, null, 4)}\n                onChange={(e) => {\n                  try {\n                    setMoveCall(JSON.parse(e.target.value) as MoveCallTransaction);\n                  } catch (error) {\n                    console.log('[input] Custom Execute MoveCall error');\n                  }\n                }}\n              />\n            </div>\n          </>\n        ) : (\n          <>\n            <button onClick={() => connectWallet()}>Connect Wallet</button>\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { dapps } from './dapps.config';\nimport {\n  JsonRpcProvider,\n  SUI_TYPE_ARG,\n  TransactionBlock,\n  SuiAddress,\n  CoinStruct,\n  PaginatedCoins,\n} from '@mysten/sui.js';\n\nconst MAX_COINS_PER_REQUEST = 50;\n\nexport const getAllCoins = async(\n  provider: JsonRpcProvider,\n  address: SuiAddress,\n  coinType: string | null,\n): Promise<CoinStruct[]> => {\n  let cursor: string | null = null;\n  const allData: CoinStruct[] = [];\n  do {\n\n    const { data, nextCursor }: PaginatedCoins = await provider.getCoins({\n      owner: address,\n      coinType,\n      cursor,\n      limit: MAX_COINS_PER_REQUEST,\n    });\n\n    if (!data || !data.length) {\n      break;\n    }\n\n\n    allData.push(...data);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    cursor = nextCursor;\n  } while (cursor);\n\n  return allData;\n}\n\nexport const buildTransfer = async (\n  provider: JsonRpcProvider,\n  sender: string,\n  to: string,\n  amount: string,\n  argType?: string,\n): Promise<TransactionBlock> => {\n  const recipient = to;\n  const isSuiTransfer = argType == null || argType === '';\n\n  const typeArg = isSuiTransfer ? SUI_TYPE_ARG : argType;\n\n  const coinsData = await getAllCoins(provider, sender, typeArg);\n\n  const coins = coinsData?.filter(({ lockedUntilEpoch: lock }) => !lock);\n\n  const tx = new TransactionBlock();\n\n  const [primaryCoin, ...mergeCoins] = coins.filter(\n    (coin) => coin.coinType === typeArg,\n  );\n\n  if (typeArg === SUI_TYPE_ARG) {\n    const coin = tx.splitCoins(tx.gas, [tx.pure(amount)]);\n    tx.transferObjects([coin], tx.pure(recipient));\n  } else {\n    const primaryCoinInput = tx.object(primaryCoin.coinObjectId);\n    if (mergeCoins.length) {\n      tx.mergeCoins(\n        primaryCoinInput,\n        mergeCoins.map((coin) => tx.object(coin.coinObjectId)),\n      );\n    }\n    const coin = tx.splitCoins(primaryCoinInput, [tx.pure(amount)]);\n    tx.transferObjects([coin], tx.pure(recipient));\n  }\n  return tx;\n};\n","/* (ignored) */","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { fakeDebugLogger, consts } from '@onekeyfe/cross-inpage-provider-core';\nimport { JsBridgeBase, injectedProviderReceiveHandler, injectJsBridge, } from '@onekeyfe/cross-inpage-provider-core';\nconst { JS_BRIDGE_MESSAGE_DIRECTION, JS_BRIDGE_MESSAGE_EXT_CHANNEL } = consts;\nfunction getOrCreateExtInjectedJsBridge(options = {}) {\n    // create ext bridge by default\n    const bridgeCreator = () => new JsBridgeExtInjected(Object.assign(Object.assign({}, options), { receiveHandler: injectedProviderReceiveHandler }));\n    const bridge = injectJsBridge(bridgeCreator);\n    return bridge;\n}\nlet postMessageListenerAdded = false;\nfunction setupPostMessageListener(options = {}) {\n    const debugLogger = options.debugLogger || fakeDebugLogger;\n    if (postMessageListenerAdded) {\n        return;\n    }\n    postMessageListenerAdded = true;\n    // - receive\n    // #### content-script -> injected\n    window.addEventListener('message', (event) => {\n        var _a, _b;\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n        const eventData = event.data;\n        // only accept extension messages\n        if (eventData.channel === JS_BRIDGE_MESSAGE_EXT_CHANNEL &&\n            eventData.direction === JS_BRIDGE_MESSAGE_DIRECTION.HOST_TO_INPAGE) {\n            debugLogger.extInjected('onWindowPostMessage', eventData);\n            const payload = eventData.payload;\n            const jsBridge = (_a = options.bridge) !== null && _a !== void 0 ? _a : (_b = window === null || window === void 0 ? void 0 : window.$onekey) === null || _b === void 0 ? void 0 : _b.jsBridge;\n            if (jsBridge) {\n                jsBridge.receive(payload);\n            }\n        }\n    }, false);\n}\nclass JsBridgeExtInjected extends JsBridgeBase {\n    constructor(config) {\n        super(config);\n        this.sendAsString = false;\n        this.isInjected = true;\n        // receive message\n        setupPostMessageListener({\n            debugLogger: this.debugLogger,\n            bridge: this,\n        });\n    }\n    // send message\n    sendPayload(payloadObj) {\n        window.postMessage({\n            channel: JS_BRIDGE_MESSAGE_EXT_CHANNEL,\n            direction: JS_BRIDGE_MESSAGE_DIRECTION.INPAGE_TO_HOST,\n            payload: payloadObj,\n        });\n    }\n}\nexport { JsBridgeExtInjected, getOrCreateExtInjectedJsBridge };\n","export * from './JsBridgeExtInjected';\n"],"names":["DAppList","props","dapps","_jsxs","className","styles","children","_jsx","map","dapp","href","url","target","name","Feature","ProviderSuiBase","cross_inpage_provider_core_dist","BX","constructor","providerName","cross_inpage_provider_types_dist","U","sui","request","data","bridgeRequest","types_ALL_PERMISSION_TYPES","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","apply","PROVIDER_EVENTS","isWalletEventMethodMatch","method","ProviderSui","Object","assign","bridge","dist","R","timeout","_account","_registerEvents","window","addEventListener","_handleDisconnected","on","message_low_level","payload","params","accountChanged","_handleAccountChange","networkChange","_handleNetworkChange","_callBridge","_handleConnected","account","options","emit","isConnectionStatusChanged","connectionStatus","address","isAccountsChanged","_a","isNetworkChanged","network","undefined","_network","hasPermissions","permissions","requestPermissions","disconnect","getAccounts","accounts","length","cross_inpage_provider_errors_dist","b$","provider","unauthorized","getActiveChain","signAndExecuteTransactionBlock","input","walletSerialize","JSON","stringify","blockSerialize","transactionBlock","serialize","signTransactionBlock","signMessage","messageSerialize","utils","ci","message","isConnected","onNetworkChange","listener","onAccountChange","event","args","useProvider","_useState","useState","_useState2","_slicedToArray","setProvider","useEffect","injectedProvider","suiWallet","INIT_MOVE_CALL","kind","typeArguments","arguments","App","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_useState3","_useState4","setNetwork","_useState5","_useState6","connected","setConnected","_useState7","_useState8","setAddress","_useState9","_useState10","moveCall","setMoveCall","rpcProvider","useMemo","JsonRpcProvider","Connection","toLowerCase","fullnode","faucet","console","log","_asyncToGenerator","has","err","warn","connectWallet","_accounts$0$address","_accounts$","requestSuiFromFaucet","disconnectWallet","signAndExecuteTransaction","buildTransfer","_Fragment","onChange","onClick","style","border","flexDirection","rows","cols","parse","error","getAllCoins","coinType","cursor","allData","_yield$provider$getCo","getCoins","owner","limit","nextCursor","push","_toConsumableArray","_x","_x2","_x3","sender","to","amount","argType","typeArg","isSuiTransfer","SUI_TYPE_ARG","coinsData","coins","filter","lockedUntilEpoch","tx","TransactionBlock","_coins$filter","coin","_coins$filter2","_toArray","primaryCoin","mergeCoins","slice","splitCoins","gas","pure","transferObjects","primaryCoinInput","object","coinObjectId","_x4","_x5","_x6","_x7","_x8","JS_BRIDGE_MESSAGE_DIRECTION","JS_BRIDGE_MESSAGE_EXT_CHANNEL","vH","getOrCreateExtInjectedJsBridge","bridgeCreator","JsBridgeExtInjected","receiveHandler","gZ","Pk","postMessageListenerAdded","ZN","config","sendAsString","isInjected","setupPostMessageListener","debugLogger","go","_b","source","eventData","channel","direction","HOST_TO_INPAGE","extInjected","jsBridge","$onekey","receive","sendPayload","payloadObj","postMessage","INPAGE_TO_HOST"],"sourceRoot":""}