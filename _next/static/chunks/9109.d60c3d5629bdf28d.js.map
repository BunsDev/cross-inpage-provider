{"version":3,"file":"static/chunks/9109.d60c3d5629bdf28d.js","mappings":"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","sources":["webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./components/near/dapps.config.ts","webpack://_N_E/./components/near/NearExample.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/borsh/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/near-api-js/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/tweetnacl|crypto","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport styles from '../../styles/Home.module.css';\n\ninterface DApp {\n  name: string;\n  url: string;\n}\n\ninterface Props {\n  dapps: DApp[];\n}\n\nfunction DAppList(props: Props) {\n  const { dapps } = props;\n\n  return (\n    <div className={styles.container}>\n      <h3>Top DApps</h3>\n      <ul>\n        {dapps.map((dapp) => (\n          <li key={dapp.name}>\n            <a href={dapp.url} target={'_blank'}>\n              {dapp.name} ↗\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { DAppList };\n","export const dapps = [\n  {\n    name: 'Paras',\n    url: 'https://paras.id/',\n  },\n  {\n    name: 'Learn Near Club',\n    url: 'https://learnnear.club/',\n  },\n  {\n    name: 'Ref Finance',\n    url: 'https://app.ref.finance/',\n  },\n];\n","/* eslint-disable @typescript-eslint/restrict-plus-operands,@typescript-eslint/ban-ts-comment */\nimport React from 'react';\nimport {\n  OneKeyNearProvider,\n  NearAccountsChangedPayload,\n  NearNetworkChangedPayload,\n  TransactionCreatorParams,\n  SignMessagesResult,\n  SignInResult,\n  SignTransactionsResult,\n} from '@onekeyfe/onekey-near-provider';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as NearApi from 'near-api-js';\nimport { random } from 'lodash';\nimport BN from 'bn.js';\n\nimport { DAppList } from '../dappList/DAppList';\nimport { dapps } from './dapps.config';\n\nconst hasWindow = typeof window !== 'undefined';\n\ndeclare global {\n  interface Window {\n    provider: OneKeyNearProvider;\n    nearAPI: typeof NearApi;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    OneKeyNearProvider: any;\n  }\n}\n\nwindow.nearAPI = NearApi;\nwindow.OneKeyNearProvider = OneKeyNearProvider;\n\n// TODO mobile web\n// TODO Toggle debugLogger button\n// TODO 0.0.7\n\nfunction toBN(value: string | null | undefined) {\n  return new BN(value ?? '', 10);\n}\n\n// fix: Error: Class Action is missing in schema: actions.actions\nfunction transactionCreator({\n  accountId,\n  publicKey,\n  receiverId,\n  nonce,\n  actions,\n  blockHash,\n}: TransactionCreatorParams) {\n  const publicKeyBuffer = NearApi.utils.PublicKey.fromString(publicKey);\n  return NearApi.transactions.createTransaction(\n    accountId,\n    publicKeyBuffer,\n    receiverId,\n    nonce,\n    actions,\n    blockHash,\n  );\n}\n\nexport default function NearExample() {\n  const [provider, setProvider] = useState<OneKeyNearProvider | null>(null);\n  const [accountId, setAccountId] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [networkId, setNetworkId] = useState('');\n\n  const createSampleBatchTransactions = useCallback(async () => {\n    if (!provider) {\n      return [];\n    }\n    const num1 = random(100, 900) / 10000;\n    const num2 = random(100, 900) / 10000;\n    const action1 = NearApi.transactions.transfer(\n      toBN(NearApi.utils.format.parseNearAmount(`${num1}`)),\n    );\n    const action2 = NearApi.transactions.transfer(\n      toBN(NearApi.utils.format.parseNearAmount(`${num2}`)),\n    );\n    // TODO custom createTransaction, call near_accountNonce near_blockInfo\n    const tx1 = await provider.createTransaction({\n      receiverId: 'bitcoinzhuo.testnet',\n      actions: [action1, action2],\n      nonceOffset: 1,\n    });\n    const tx2 = await provider.createTransaction({\n      receiverId: 'evmzyz.testnet',\n      actions: [action2],\n      nonceOffset: 2,\n    });\n    const transactions = [tx1, tx2];\n    return transactions;\n  }, [provider]);\n\n  const onAccountsChanged = useCallback((payload: NearAccountsChangedPayload) => {\n    const _accountId = payload?.accounts?.[0]?.accountId || '';\n    const _publicKey = payload?.accounts?.[0]?.publicKey || '';\n    console.log('near onAccountsChanged >>>', _accountId, _publicKey);\n    setAccountId(_accountId);\n    setPublicKey(_publicKey);\n  }, []);\n  const onNetworkChanged = useCallback((payload: NearNetworkChangedPayload) => {\n    console.log('near onNetworkChanged >>>', payload);\n    setNetworkId(payload.networkId);\n  }, []);\n  const config = useMemo(\n    () => ({\n      // networkId: 'mainnet',\n      // nodeUrl: 'https://rpc.mainnet.near.org',\n      networkId: 'testnet',\n      nodeUrl: 'https://rpc.testnet.near.org',\n      headers: {},\n      keyStore: new NearApi.keyStores.BrowserLocalStorageKeyStore(),\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    if (!hasWindow) {\n      // return;\n    }\n\n    // const near = new NearApi.Near(config);\n    // const connection = near.connection;\n    const _provider = new OneKeyNearProvider({\n      // connection,\n      // networkId: config.networkId,\n      // connectEagerly: true, // auto connect wallet accounts even if localStorage cleared\n      transactionCreator: process.env.NODE_ENV !== 'production' ? transactionCreator : undefined,\n      // logger: console,\n    });\n    _provider.on('accountsChanged', onAccountsChanged);\n    _provider.on('networkChanged', onNetworkChanged);\n\n    window.provider = _provider;\n\n    void (async () => {\n      const installed = await _provider.detectWalletInstalled();\n      if (installed) {\n        setProvider(_provider);\n\n        const res1 = (await _provider.request({\n          method: 'near_accounts',\n        })) as NearAccountsChangedPayload;\n        setAccountId(res1?.accounts?.[0]?.accountId || '');\n        setPublicKey(res1?.accounts?.[0]?.publicKey || '');\n        // setAccountId(provider.getAccountId());\n\n        const res2 = (await _provider.request({\n          method: 'near_networkInfo',\n        })) as NearNetworkChangedPayload;\n        setNetworkId(res2?.networkId || '');\n        // setNetworkId(provider.getNetworkInfo().networkId);\n      }\n    })();\n\n    return () => {\n      _provider.off('accountsChanged', onAccountsChanged);\n      _provider.off('networkChanged', onNetworkChanged);\n    };\n  }, [config, onAccountsChanged, onNetworkChanged]);\n\n  return (\n    <div>\n      <DAppList dapps={dapps} />\n      {!provider && (\n        <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n          Install OneKey Extension →\n        </a>\n      )}\n      {provider && (\n        <div>\n          <div>\n            accountId: <strong>{accountId}</strong>\n          </div>\n          <div>\n            publicKey: <strong>{publicKey}</strong>\n          </div>\n          <div>\n            localNetworkId: <strong>{provider._networkId}</strong> <button>switch TODO</button>\n          </div>\n          <div>\n            walletNetworkId: <strong>{networkId}</strong>\n          </div>\n          <div>\n            providerVersion: <strong>v{provider.version}</strong>\n          </div>\n\n          <hr />\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_requestAccounts',\n              })) as SignInResult;\n              console.log('near_requestAccounts', res, res.accounts);\n            }}\n          >\n            near_requestAccounts\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.requestSignIn();\n              console.log('requestSignIn', res, res.accounts);\n            }}\n          >\n            requestSignIn\n          </button>\n\n          <hr />\n          <button onClick={() => provider?.request({ method: 'near_signOut' })}>\n            near_signOut\n          </button>\n          <button onClick={() => provider?.signOut()}>signOut</button>\n\n          <hr />\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_accounts',\n                params: [],\n              })) as NearAccountsChangedPayload;\n              console.log('near_accounts', res, res.accounts);\n            }}\n          >\n            near_accounts\n          </button>\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_networkInfo',\n                params: [],\n              })) as NearNetworkChangedPayload;\n              console.log('near_networkInfo', res, res.networkId);\n            }}\n          >\n            near_networkInfo\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.request({\n                method: 'near_accountNonce',\n                params: [],\n              });\n              console.log('near_accountNonce', res);\n            }}\n          >\n            near_accountNonce\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.request({\n                method: 'near_blockInfo',\n                params: [],\n              });\n              console.log('near_blockInfo', res);\n            }}\n          >\n            near_blockInfo\n          </button>\n\n          <hr />\n          <div>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = (await provider.request({\n                  method: 'near_sendTransactions',\n                  params: {\n                    transactions,\n                  },\n                })) as SignTransactionsResult;\n                console.log('near_sendTransactions', res, res.transactionHashes);\n              }}\n            >\n              near_sendTransactions\n            </button>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = await provider.requestSignTransactions({\n                  transactions,\n                });\n                console.log('requestSignTransactions', res, res.transactionHashes);\n              }}\n            >\n              requestSignTransactions\n            </button>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = (await provider.request({\n                  method: 'near_signTransactions',\n                  params: {\n                    transactions,\n                  },\n                })) as SignMessagesResult;\n                console.log('near_signTransactions', res, res.signatures);\n              }}\n            >\n              near_signTransactions\n            </button>\n            <button>TODO Send USDT Token (mainnet only)</button>\n            <button\n              onClick={async () => {\n                const num1 = random(100, 900) / 10000;\n                const num2 = random(100, 900) / 10000;\n                const amount = NearApi.utils.format.parseNearAmount(num1.toString());\n                const action1 = NearApi.transactions.transfer(toBN(amount));\n                const action2 = NearApi.transactions.transfer(\n                  toBN(NearApi.utils.format.parseNearAmount(num2.toString())),\n                );\n                const acc = provider.account();\n                const res = await acc.signAndSendTransaction({\n                  receiverId: 'evmzyz.testnet',\n                  actions: [action1, action2],\n                });\n                console.log('signAndSendTransaction', res, res.status);\n              }}\n            >\n              signAndSendTransaction (legacy)\n            </button>\n\n            <hr />\n            <button\n              onClick={async () => {\n                const res = (await provider.request({\n                  method: 'near_signMessages',\n                  params: {\n                    messages: ['hello world', 'onekey near wallet'],\n                  },\n                })) as SignMessagesResult;\n                console.log('near_signMessages', res, res.signatures);\n              }}\n            >\n              near_signMessages\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.requestSignMessages({\n                  messages: ['hello world', 'onekey near wallet'],\n                });\n                console.log('requestSignMessages', res, res.signatures);\n              }}\n            >\n              requestSignMessages\n            </button>\n\n            <hr />\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'query',\n                  'params': {\n                    'request_type': 'view_access_key_list',\n                    'account_id':\n                      'c3be856133196da252d0f1083614cdc87a85c8aa8abeaf87daff1520355eec53',\n                    'finality': 'optimistic',\n                  },\n                });\n                console.log('RPC Call: view_access_key_list', res);\n              }}\n            >\n              RPC Call: view_access_key_list\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'gas_price',\n                  'params': [null],\n                });\n                console.log('RPC Call: gas_price', res);\n              }}\n            >\n              RPC Call: gas_price\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'status',\n                  'params': [],\n                });\n                console.log('RPC Call: status', res);\n              }}\n            >\n              RPC Call: status\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'network_info',\n                  'params': [],\n                });\n                console.log('RPC Call: network_info', res);\n              }}\n            >\n              RPC Call: network_info\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["DAppList","props","dapps","_jsxs","className","styles","children","_jsx","map","dapp","href","url","target","name","toBN","value","BN","NearExample","_useState","useState","_useState2","_slicedToArray","provider","setProvider","_useState3","_useState4","accountId","setAccountId","_useState5","_useState6","publicKey","setPublicKey","_useState7","_useState8","networkId","setNetworkId","createSampleBatchTransactions","useCallback","_asyncToGenerator","num1","random","num2","action1","NearApi","action2","createTransaction","receiverId","actions","nonceOffset","onAccountsChanged","payload","_payload$accounts","_payload$accounts$","_payload$accounts2","_payload$accounts2$","_accountId","accounts","_publicKey","console","log","onNetworkChanged","config","useMemo","nodeUrl","headers","keyStore","useEffect","_provider","OneKeyNearProvider","transactionCreator","undefined","on","window","detectWalletInstalled","_res1$accounts","_res1$accounts$","_res1$accounts2","_res1$accounts2$","res1","request","method","res2","off","_networkId","version","onClick","res","requestSignIn","signOut","params","transactions","transactionHashes","requestSignTransactions","signatures","amount","toString","acc","account","signAndSendTransaction","status","messages","requestSignMessages","nearAPI"],"sourceRoot":""}