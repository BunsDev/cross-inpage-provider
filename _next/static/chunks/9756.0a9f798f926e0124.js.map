{"version":3,"file":"static/chunks/9756.0a9f798f926e0124.js","mappings":"+KAYA,SAASA,EAASC,CAAY,CAAE,CAC9B,IAAQC,EAAUD,EAAVC,KAAK,CAEb,MACEC,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAWC,IAAAA,SAAAA,CAAiBC,SAAA,CAC/BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,WAAS,GACbC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SACGJ,EAAMM,GAAG,CAAC,SAACC,CAAI,QACdF,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SACEH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGO,KAAMD,EAAKE,GAAI,CAACC,OAAQ,SAASN,SAAA,CACjCG,EAAKI,IAAI,CAAC,KACb,EAAI,EAHGJ,EAAKI,IAIV,CAAC,EACL,GACC,EAGX,6JC7BaX,EAAQ,CACnB,CACEW,KAAM,WACNF,IAAK,6BACP,EACA,CACEE,KAAM,YACNF,IAAK,wBACP,EACD,YCAc,SAASG,GAAa,CAInC,MAFAC,CAAAA,EAAAA,EAAAA,CAAAA,IAGEZ,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,QAAMC,UAAcC,IAAAA,IAAW,oBAAmBC,SAAA,CAChDH,CAAAA,EAAAA,EAAAA,IAAAA,EAACa,IAAI,CAAAV,SAAA,CACHC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SAAAD,SAAO,wBAAsB,GAE7BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMM,KAAK,WAAWI,QAAQ,qCAAqC,GAAG,GAExEV,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAAD,SACEH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKe,GAAG,iBAAgBZ,SAAA,CACtBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKY,IAAI,oBAAoB,GAC7BZ,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIW,GAAG,YAAYd,UAAU,cAAaE,SAAC,wBAE3C,GAAK,EACD,GAERH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,WAAAG,SAAA,CACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,QAAM,GAEjCH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,+CAA8CE,SAC3DH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,YAClCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,SAAS,GAAG,EAC5B,GAGNX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,+CAA8CE,SAC3DH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,YACpCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,SAAS,GAAG,EAC5B,GAGNX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,+CAA8CE,SAC3DH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,oBAC1BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,UAAU,GAAG,EACrC,GACA,GACF,GAGRX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,WAAAD,SACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oCAAmCE,SAChDC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,+CAA8CE,SAC3DC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,OAAME,SACnBH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,eAAa,GAExCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,gBACHE,SAAQ,GAAAd,SACT,SAED,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,cAAcE,SAAQ,GAAAd,SAAC,sBAEpF,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,oBAC5BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,mBAAmB,GAAG,GAC9C,EACA,EACF,EACF,EACF,GAGRX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,WAAAD,SACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oCAAmCE,SAChDC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,+CAA8CE,SAC3DC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,OAAME,SACnBH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,qBAAmB,GAE9CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,qBACHE,SAAQ,GAAAd,SACT,qBAED,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,iBACHE,SAAQ,GAAAd,SACT,iBAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,uBACzBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,mBAAmB,GAAG,GACjD,EACA,EACF,EACF,EACF,GAGRX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,WAAAD,SACEH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,UAAQ,GACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,IAAE,GAC7BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEW,GAAG,iBACHG,KAAK,OACLjB,UAAU,+BACVkB,aAAa,oCAAoC,EACjD,GAGJf,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,eAAa,GACxCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEW,GAAG,cACHG,KAAK,OACLjB,UAAU,+BACVkB,aAAa,OAAO,EACpB,GAGJf,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,iDAA+C,GAC1EC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEW,GAAG,mBACHG,KAAK,OACLjB,UAAU,+BACVkB,aAAa,MAAM,EACnB,GAEJf,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,aAAaE,SAAQ,GAAAd,SAAC,MAEnF,GACAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACAA,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,mBAAiB,GAC5CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,qBACHE,SAAQ,GAAAd,SACT,uCAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,oBAC5BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,kBAAiBZ,SAAC,aAAW,GAAO,GAC5D,EACA,EACF,GAERC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,mBAAiB,GAC5CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,YACEW,GAAG,qBACHd,UAAU,eACVmB,KAAM,EACNC,YAAY,iFAAiF,EAC7F,GAEJjB,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,eACHE,SAAQ,GAAAd,SACT,gCAED,GACAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACAA,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,mBAAiB,GAC5CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,qBACHE,SAAQ,GAAAd,SACT,6BAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,oBAC5BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,iBAAgBZ,SAAC,aAAW,GAAO,GAC3D,EACA,EACF,GAGRC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,wBAAsB,GACjDC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,uBAAqB,GAChDC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEW,GAAG,gBACHG,KAAK,OACLjB,UAAU,+BACVkB,aAAa,wBAAwB,EACrC,GAEJf,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,sBAAqBZ,SAAC,mBAEnF,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,mBAAiB,GAE5CH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGe,GAAG,oBAAoBd,UAAU,gCAA+BE,SAAA,CAAC,WAC1DC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMH,UAAU,MAAM,GAAG,GAGnCG,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKW,GAAG,qBAAqBd,UAAU,YAAY,GAAG,EAClD,EACF,GACF,EACF,GAERG,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,WAAAD,SACEH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,eAAa,GAEjBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,eACHE,SAAQ,GAAAd,SACT,MAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,WACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,oBAAoB,GAAG,GAG1CX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,qBACHE,SAAQ,GAAAd,SACT,QAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,sCAE3CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,2BAA2B,GAAG,GACrC,EACA,EACF,GAGRX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,mBAAiB,GAE5CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,yBACHE,SAAQ,GAAAd,SACT,oBAED,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SAEAJ,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKe,GAAG,uBAAsBZ,SAAA,CAC5BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEH,UAAU,eACViB,KAAK,OACLG,YAAY,qBACZN,GAAG,qBAAqB,GAG1BX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,gBACHE,SAAQ,GAAAd,SACT,SAED,GAAS,GAGXC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SAEAA,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,gBACHE,SAAQ,GAAAd,SACT,SAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,mBAC7BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,sBAAsB,GAAG,GAGpDf,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gDAA+CE,SAAA,CAAC,eAC/CC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,mBAAmB,GAAG,GAG7Cf,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,kCAAiCE,SAAA,CAAC,cAClCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,kBAAkB,GAAG,GACvC,EACA,EACF,GAGRX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,aAAW,GAEfC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,wBAAuBZ,SAC3B,eAED,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UACEH,UAAU,wCACVc,GAAG,4BAA2BZ,SAC/B,mBAED,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,WACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,kBAAkB,GAAG,GACpC,EACA,EACF,GACF,EACF,GAERX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,WAAAD,SACEH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,SAAO,GAEXC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,eAAcZ,SAAC,OAE5E,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,sBAAqBZ,SAAC,eAEnF,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,WACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,oBAAoB,GAAG,GACtC,EACA,EACF,GAERX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,KAAG,GAEPC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,gBAAeZ,SAAC,iBAE7E,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,oBAAmBZ,SAAC,sBAEjF,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,cAAaZ,SAAC,qBAE3E,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,YAAWZ,SAAC,YAEzE,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,cAAaZ,SAAC,cAE3E,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,WACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,WAAW,GAAG,GAC7B,EACA,EACF,GAERX,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,0EAAyEE,SACtFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SAAI,iBAAe,GAEnBC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,oBAAmBZ,SAAC,cAEjF,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAIH,UAAU,aAAYE,SAAC,qCAAmC,GAC9DC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,OAAKH,UAAU,oBAAmBE,SAChCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEW,GAAG,yBACHG,KAAK,OACLjB,UAAU,+BACVkB,aAAa,KAAK,EAClB,GAEJf,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,oBAAmBZ,SAAC,SAEjF,GAEAC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQH,UAAU,wCAAwCc,GAAG,qBAAoBZ,SAAC,WAElF,GAEAH,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGC,UAAU,gCAA+BE,SAAA,CAAC,WACnCC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,QAAMW,GAAG,uBAAuB,GAAG,GACzC,EACA,EACF,GACF,EACF,GAERX,CAAAA,EAAAA,EAAAA,GAAAA,EAACP,EAAAA,CAAQA,CAAA,CAACE,MAAOA,CAAM,GAAG,EAGhC,wsFC7aO,SAASa,GAAc,CAC5BU,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CAId,IAHIC,EA2EYC,EAxEVC,EACJC,cAAAA,IAFqBC,IAAIC,OAAOC,QAAQ,CAACtB,IAAI,EAElCuB,QAAQ,CAAmB,wBAA0BC,KAAAA,CAAS,CAEnEC,EAAwBC,EAAAA,CAAAA,CAAAA,mBAAL,CAGrBC,EAAaC,SAASC,cAAc,CAAC,WACrCC,EAAaF,SAASC,cAAc,CAAC,WACrCE,EAAcH,SAASC,cAAc,CAAC,YAGtCG,EAAgBJ,SAASC,cAAc,CAAC,iBACxCI,EAAoBL,SAASC,cAAc,CAAC,eAC5CK,EAAqBN,SAASC,cAAc,CAAC,qBAG7CM,EAA2BP,SAASC,cAAc,CAAC,sBACnDO,EAAuBR,SAASC,cAAc,CAAC,kBAC/CQ,EAAoBT,SAASC,cAAc,CAAC,qBAG5CS,EAAaV,SAASC,cAAc,CAAC,cACrCU,EAAqBX,SAASC,cAAc,CAAC,sBAC7CW,EAAkBZ,SAASC,cAAc,CAAC,mBAG1CY,EAAqBb,SAASC,cAAc,CAAC,sBAC7Ca,EAAed,SAASC,cAAc,CAAC,gBACvCc,EAAqBf,SAASC,cAAc,CAAC,sBAC7Ce,EAAiBhB,SAASC,cAAc,CAAC,kBAGzCgB,EAAejB,SAASC,cAAc,CAAC,gBACvCiB,EAAqBlB,SAASC,cAAc,CAAC,sBAC7CkB,EAAqBnB,SAASC,cAAc,CAAC,sBAC7CmB,EAA4BpB,SAASC,cAAc,CAAC,6BAGpDoB,EAAyBrB,SAASC,cAAc,CAAC,0BACjDqB,EAAsBtB,SAASC,cAAc,CAAC,uBAC9CsB,EAAgBvB,SAASC,cAAc,CAAC,iBACxCuB,EAAgBxB,SAASC,cAAc,CAAC,iBACxCwB,EAAuBzB,SAASC,cAAc,CAAC,wBAC/CyB,EAAoB1B,SAASC,cAAc,CAAC,qBAC5C0B,EAAmB3B,SAASC,cAAc,CAAC,oBAG3C2B,EAAwB5B,SAASC,cAAc,CAAC,yBAChD4B,EAA4B7B,SAASC,cAAc,CAAC,6BACpD6B,EAAmB9B,SAASC,cAAc,CAAC,oBAG3C8B,EAAe/B,SAASC,cAAc,CAAC,gBACvC+B,EAAsBhC,SAASC,cAAc,CAAC,uBAC9CgC,EAAqBjC,SAASC,cAAc,CAAC,sBAG7CiC,EAAgBlC,SAASC,cAAc,CAAC,iBACxCkC,EAAoBnC,SAASC,cAAc,CAAC,qBAC5CmC,EAAYpC,SAASC,cAAc,CAAC,aACpCoC,EAAcrC,SAASC,cAAc,CAAC,eACtCqC,EAAYtC,SAASC,cAAc,CAAC,aACpCsC,EAAcvC,SAASC,cAAc,CAAC,eAGtCuC,EAAoBxC,SAASC,cAAc,CAAC,qBAC5CwC,GAAoBzC,SAASC,cAAc,CAAC,qBAC5CyC,GAAqB1C,SAASC,cAAc,CAAC,sBAC7C0C,GAAwB3C,SAASC,cAAc,CAAC,yBAE9C2C,GAA0DC,EAAAA,EAA5C,CAAEC,GAA0CD,EAAAA,EAAtB,CAAEE,GAAoBF,EAAAA,EAAV,CAAEG,GAAQH,EAAAA,EAAL,CAmqC7D,SAASI,GAA4BC,CAAgB,CAAE,QACrD,IAAIA,EAAiBC,MAAM,CAClB,wBAGFC,EADkClF,GAAG,CAAC,SAACmF,CAAI,SAAKA,EAAKC,gBAAgB,GACrDC,MAAM,CAAC,SAACC,CAAG,CAAEjF,CAAI,WAAQiF,EAAMjF,EAAI,MAAM,IAAIkF,OAAO,CAAC,MAAQ,GADpF,CARFC,CA7pCgBrE,EAAAsE,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC7B,GAAI,CACF,GAAIlE,OAAOmE,QAAQ,CAAE,CAEnBxE,EAAmB,IAAIyE,EAAAA,CAAAA,CAAAA,YAAsB,CAACpE,OAAOmE,QAAQ,CAAE,OAC/D,IAqDgBE,EA9ChBC,EAOAC,GAdMC,GAAW,MAAS7E,EAAiB8E,cAAc,GACzDC,QAAQC,GAAG,CAAC,CAAEH,YAAAA,EAAY,EAC5B,CACF,CAAE,MAAOI,EAAO,CACdF,QAAQE,KAAK,CAACA,EAChB,CAGA,GAAI,CACFN,EAAa,IAAIjE,EAAAA,CAAkBA,CAAC,CAAER,gBAAAA,CAAgB,EACxD,CAAE,MAAO+E,EAAO,CACdF,QAAQE,KAAK,CAACA,EAChB,CAGA,IAAIC,GAA4B,GAE1BC,GAAiB,CACrBlE,EACAE,EACAC,EACAE,EACAC,EACAG,EACAC,EACAE,EACAE,EACAE,EACAC,EACAC,EACAC,EACAO,EACAC,EACAJ,EACAC,EACAK,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,GACAC,GACD,CAEK8B,GAAsB,UAAH,QAASR,IAAYA,GAASb,MAAM,CAAG,CAAC,EAE3DsB,GAAiB,UAAM,CAC3BrE,EAAcsE,SAAS,CAAG,yBAC1BtE,EAActB,QAAQ,CAAG,GACzBiF,EAAWY,eAAe,EAC5B,EAEMC,IAAcd,EAAAH,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACjC,GAAI,CACF,IAAMkB,EAAW,MAASpF,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAChDC,OAAQ,qBACV,GACAC,GAAkBH,EACpB,CAAE,MAAOR,EAAO,CACdF,QAAQE,KAAK,CAACA,EAChB,CACF,GAAC,UATmB,QAAAP,EAAAmB,KAAA,MAAAC,UAAA,GAWdC,GAAoB,UAAM,CAKhC,EAEMC,GAAgB,UAAM,CAE1B,GAD+B,KAA2BZ,KAOxDnE,EAAkBvB,QAAQ,CAAG,GAC7ByB,EAAyBzB,QAAQ,CAAG,GACpC0B,EAAqB1B,QAAQ,CAAG,GAChC4B,EAAW5B,QAAQ,CAAG,GACtB6B,EAAmB7B,QAAQ,CAAG,GAC9BgC,EAAahC,QAAQ,CAAG,GACxBmC,EAAanC,QAAQ,CAAG,GACxBuC,EAAuBvC,QAAQ,CAAG,GAClCiD,EAAajD,QAAQ,CAAG,GACxBkD,EAAoBlD,QAAQ,CAAG,GAC/BoD,EAAcpD,QAAQ,CAAG,GACzB8C,EAAsB9C,QAAQ,CAAG,GACjC+C,EAA0B/C,QAAQ,CAAG,GACrCqD,EAAkBrD,QAAQ,CAAG,GAC7BuD,EAAYvD,QAAQ,CAAG,GACvBwD,EAAUxD,QAAQ,CAAG,GACrByD,EAAYzD,QAAQ,CAAG,GACvB0D,EAAkB1D,QAAQ,CAAG,GAC7B2D,GAAkB3D,QAAQ,CAAG,GAC7B4D,GAAmB5D,QAAQ,CAAG,OAzBJ,CAC1B,IAAK,IAAMuG,KAAUd,GACnBc,EAAOvG,QAAQ,CAAG,GAEpBqG,IACF,CAuBA,IAIWX,MACTpE,EAAcsE,SAAS,CAAG,YAC1BtE,EAActB,QAAQ,CAAG,GACrBiF,GACFA,EAAWuB,cAAc,KAG3BlF,EAAcsE,SAAS,CAAG,UAC1BtE,EAAcmF,OAAO,CAAGX,GACxBxE,EAActB,QAAQ,CAAG,KAZzBsB,EAAcsE,SAAS,CAAG,kCAC1BtE,EAAcmF,OAAO,CAAGd,GACxBrE,EAActB,QAAQ,CAAG,GAY7B,EAEM0G,GAA2B,UAAM,CACjClB,KAGJA,GAA4B,GAE5BjE,EAAkBkF,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACtC,GAAI,CACF,IAAM8B,EAAS,MAAShG,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAC9CC,OAAQ,cACV,EACAzE,CAAAA,EAAmBoF,SAAS,CAAGD,CAAS,CAAC,EAAE,EAAI,0BACjD,CAAE,MAAOE,EAAK,CACZxB,QAAQE,KAAK,CAACsB,GACdrF,EAAmBoF,SAAS,WAAaC,EAAIC,OAAS,CAE1D,GAMArF,EAAyBgF,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC7C,GAAI,CACFlD,EAAkBiF,SAAS,CAAG,GAC9B,IAAMxC,EAAgB,MAASzD,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CACrDC,OAAQ,4BACRc,OAAQ,CAAC,CAAEC,aAAc,CAAC,CAAE,EAC9B,EACArF,CAAAA,EAAkBiF,SAAS,CAAGzC,GAA4BC,EAC5D,CAAE,MAAOyC,EAAK,CACZxB,QAAQE,KAAK,CAACsB,GACdlF,EAAkBiF,SAAS,WAAaC,EAAIC,OAAS,CAEzD,GAEApF,EAAqB+E,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACzC,GAAI,CACFlD,EAAkBiF,SAAS,CAAG,GAC9B,IAAMxC,EAAgB,MAASzD,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CACrDC,OAAQ,uBACV,EACAtE,CAAAA,EAAkBiF,SAAS,CAAGzC,GAA4BC,EAC5D,CAAE,MAAOyC,EAAK,CACZxB,QAAQE,KAAK,CAACsB,GACdlF,EAAkBiF,SAAS,WAAaC,EAAIC,OAAS,CAEzD,GAMAlF,EAAW6E,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC/BQ,QAAQC,GAAG,CAAC,sBAEZ,IAAM2B,EAAY/F,SAASC,cAAc,CAAC,kBAAkB+F,KAAK,CACjE,GAAI,CAACD,EAGH,OADAtG,OAAOwG,KAAK,CAAC,iCACN,EAGT,CACA,GAAI,CAAEC,CAAAA,WADwBlG,SAASC,cAAc,CAAC,eAAe+F,KAAK,CAAE,IACzD,GAGjB,OADAvG,OAAOwG,KAAK,CAAC,2CACN,EAET,KAAME,EAAiC,IAAIC,EAAAA,CAASA,CAAC,cAK/CC,EAAoBC,IAJAF,EAAAA,CAASA,CACjCG,OAAOvG,SAASC,cAAc,CAAC,eAAe+F,KAAK,EACnD,IAEsCQ,KAAK,CAACL,GACxCM,EAAa,KAAQJ,EAAkBK,QAAQ,CAAC,IACtDvC,QAAQC,GAAG,CAAC,CAAEqC,cAAAA,EAAeJ,kBAAmBA,EAAkBK,QAAQ,CAAC,GAAI,GAE/E,IAAMC,EAAW,CACfC,GAAIb,EACJC,MAAOS,EACPI,SAAU,IACVC,SAAU,CACZ,EAEMC,EAAcC,SAAShH,SAASC,cAAc,CAAC,oBAAoB+F,KAAK,CAAE,IAChF7B,QAAQC,GAAG,CAAC,CAAE2C,YAAAA,CAAY,GACtBA,EAAc,GAChBJ,CAAAA,EAASI,WAAW,CAAGA,CAAAA,EAGzB5C,QAAQC,GAAG,CAAC,CAAEuC,SAAAA,CAAS,GAIvBxC,QAAQC,GAAG,CAHU,OAAShF,EAC3B6H,SAAS,GACTC,wBAAwB,CAACP,EAAAA,EAE9B,GAEAhG,EAAmB4E,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACvC/C,EAAgB8E,SAAS,CAAG,UAC5B/E,EAAmB7B,QAAQ,CAAG,GAC9B,GAAI,CAGF,IA0BQqI,EAkBAA,EA5CFC,EAASC,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,oBAA6B,CADxB,CAAC,gBAAgB,EAG/BtB,EAAY/F,SAASC,cAAc,CAAC,kBAAkB+F,KAAK,CACjE,GAAI,CAACD,EAGH,OADAtG,OAAOwG,KAAK,CAAC,iCACN,EAET9B,CAGA,GAHAA,QAAQC,GAAG,CAAC,CAAE2B,UAAAA,CAAU,GAGpB,CAAEG,CAAAA,WADwBlG,SAASC,cAAc,CAAC,eAAe+F,KAAK,CAAE,IACzD,GAGjB,OADAvG,OAAOwG,KAAK,CAAC,2CACN,EAET,KAAME,EAAiC,IAAIC,EAAAA,CAASA,CAAC,cAK/CC,EAAoBC,IAJAF,EAAAA,CAASA,CACjCG,OAAOvG,SAASC,cAAc,CAAC,eAAe+F,KAAK,EACnD,IAEsCQ,KAAK,CAACL,GACxCM,EAAa,KAAQJ,EAAkBK,QAAQ,CAAC,IAGhDY,GAGJH,CAFMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAE7BC,aAAa,CAACC,OAAOpB,EAAkBK,QAAQ,CAAC,MAC5CgB,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CACVqC,cAAAA,EACAJ,kBAAmBA,EAAkBK,QAAQ,CAAC,IAC9CY,aAAAA,CACF,GAEA,IAAMM,EAAO,CAACC,CAAAA,EAAAA,EAAAA,EAAAA,EAAS9B,GAAY8B,CAAAA,EAAAA,EAAAA,EAAAA,EAASP,GAAc,CAEpDQ,EAAiBT,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,oBAA6B,CAzCjC,wCAyC8CD,EAAQQ,GACzEzD,QAAQC,GAAG,CAAC0D,GAGZ,IAAMC,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAE3B,IAAMpB,EAAW,CACfsB,KAAMF,CACR,EAEMhB,EAAcC,SAAShH,SAASC,cAAc,CAAC,oBAAoB+F,KAAK,CAAE,IAChF7B,QAAQC,GAAG,CAAC,CAAE2C,YAAAA,CAAY,GACtBA,EAAc,GAChBJ,CAAAA,EAASI,WAAW,CAAGA,CAAAA,EAGzB5C,QAAQC,GAAG,CAAC,CAAEuC,SAAAA,CAAS,GACvB,IAAMuB,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CAACP,GAC5BxC,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAE9BtH,EAAgB8E,SAAS,qCACzB,IAAIyC,EAAQC,YAAWzE,CAAAA,EAAAA,EAAAA,CAAAA,EAAC,WAAY,CAClC,IAAM0E,EAAO,MAASjJ,EAAiBkJ,kBAAkB,CAACJ,GAC1D/D,QAAQC,GAAG,CAAC,CAAEiE,QAAAA,CAAQ,GACtBlE,QAAQC,GAAG,CAACiE,EAAQE,aAAa,EACV,aAAnBF,EAAQG,MAAM,GAChB5H,EAAgB8E,SAAS,gBAAkB2C,EAAQE,aAAa,eAC5DF,EAAQE,aAAa,EARD,IAStBE,cAAcN,GACdvH,EAAgB8E,SAAS,CAAG,iBAC5B/E,EAAmB7B,QAAQ,CAAG,IAGpC,GAAG,IACL,CAAE,MAAOuF,EAAO,CAGd,MAFAzD,EAAgB8E,SAAS,CAAG,cAC5B/E,EAAmB7B,QAAQ,CAAG,GACxBuF,CACR,CACF,GAMAvD,EAAayE,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACjC,IAAIuE,CACJlH,CAAAA,EAAe0E,SAAS,CAAG,YAE3B,GAAI,CACF,IAAMgD,EAAa7H,EAAmBmF,KAAK,CAAC2C,IAAI,EAC3CD,CAAAA,EAAWvF,MAAM,EACpB8C,MAAM,8BAER,IAAM2C,EAAwBC,EAAAA,EAAAA,CAAAA,iCAA0C,CAACH,GACzER,EAAe,MAAS9I,EAAiB6H,SAAS,GAAGC,wBAAwB,CAAC,CAC5Ee,KAAMW,CACR,GACAzE,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,EAChC,CAAE,MAAO7D,EAAO,CAEd,MADArD,EAAe0E,SAAS,CAAG,oBACrBrB,CACR,CAEAF,QAAQC,GAAG,gCACsBJ,EAAQ,CAAC,EAAE,sBAAqBkE,GAEjElH,EAAe0E,SAAS,CAAG,WAC3B3E,EAAmBjC,QAAQ,CAAG,EAEhC,GAEAiC,EAAmBwE,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACvC3C,EAAe0E,SAAS,CAAG,kCAC3B,GAAI,CACF,IAAMoD,EAAM,MAAS1J,EAAiB2J,IAAI,CAAC,CACzCC,YAAgBhF,EAAQ,CAAC,EAAE,wBAC3BiF,UAAW,EAAE,CACbrB,KAAM,EACR,EACA5G,CAAAA,EAAe0E,SAAS,CAAGoD,CAAM,CAAC,EAAE,CACpC,MAAOzE,EAAO,CAEd,MADAF,QAAQC,GAAG,CAACC,GACNA,CACR,CACF,GAqFApD,EAAasE,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAEjC,GAAI,CACFzC,EAAmBwE,SAAS,CAAG,GAC/BvE,EAAmBrC,QAAQ,CAAG,GAC9BsC,EAA0BsE,SAAS,CAAG,GACtC,IAAMwD,EAAOlF,EAAQ,CAAC,EAAE,CAClBmF,EAAG,KAAQC,EAAOF,IAAI,CANP,qCAMwB,QAAQxC,QAAQ,CAAC,OAC9DvC,QAAQC,GAAG,CAAC,CAAE+E,IAAAA,CAAI,GAClB,IAAME,EAAYtJ,EAAW2F,SAAS,CAEhC4D,EAAI,MAAS7J,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CACzCC,OAAQ,gBAIRc,OAAQ,CAACsD,EAAKD,EANI,CAAEG,UAAAA,CAAU,EAOhC,EACAnI,CAAAA,EAAmBwE,SAAS,CAAG4D,CACjC,CAAE,MAAO3D,EAAK,CACZxB,QAAQE,KAAK,CAACsB,GACd1E,EAAayE,SAAS,WAAaC,EAAIC,OAAS,CAEpD,GAKAzE,EAAmBoE,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACvC,GAAI,CACF,IAAMuF,EAAOlF,EAAQ,CAAC,EAAE,CAClBsF,EAAOpI,EAAmBwE,SAAS,CACnC6D,EAAa,MAASlC,EAAAA,EAAAA,CAAAA,aAAAA,CAAAA,2BAA+C,CAACiC,GAC5EnF,QAAQC,GAAG,CAAC,CAAEmF,cAAAA,CAAc,GAExBA,IAAkBL,GACpB/E,QAAQC,GAAG,uDAAuDmF,GAClEnI,EAA0BsE,SAAS,CAAG6D,GAEtCpF,QAAQC,GAAG,CAAC,6CAEhB,CAAE,MAAOuB,EAAK,CACZxB,QAAQE,KAAK,CAACsB,GACdvE,EAA0BsE,SAAS,WAAaC,EAAIC,OAAS,CAEjE,GAMAvE,EAAuBkE,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC3C,GAAI,CACF,IAAM6F,EAAS,MAAS/J,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAC9CC,OAAQ,6BACRc,OAAQ,CAAC7B,EAAQ,CAAC,EAAE,CACtB,EACAvC,CAAAA,EAAqBiD,SAAS,CAAG8E,EACjClI,EAAoBxC,QAAQ,CAAG,EACjC,CAAE,MAAOuF,EAAO,CACd5C,EAAqBiD,SAAS,WAAaL,EAAMuB,OAAS,CAC1DtE,EAAoBxC,QAAQ,CAAG,GAC/ByC,EAAczC,QAAQ,CAAG,GACzB0C,EAAc1C,QAAQ,CAAG,EAC3B,CACF,GAEAwC,EAAoBmI,OAAO,CAAG,UAAM,CAC9B,CAACpI,EAAuBvC,QAAQ,EAAIwC,EAAoB0E,KAAK,CAAC7C,MAAM,CAAG,EACrE5B,EAAczC,QAAQ,EACxByC,CAAAA,EAAczC,QAAQ,CAAG,IAEjByC,EAAczC,QAAQ,EAChCyC,CAAAA,EAAczC,QAAQ,CAAG,GAE7B,EAEAyC,EAAcgE,OAAO,CAAG,UAAM,CAC5B,GAAI,CACF,IAAMmE,EAAgBC,CAAAA,EAAAA,EAAAA,OAAAA,EACpBlI,EAAqBiD,SAAS,CAC9B,CAAE,KAAQpD,EAAoB0E,KAAM,EACpC,2BAEFtE,CAAAA,EAAkBgD,SAAS,CA2pB1BgD,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ0B,EAAOF,IAAI,CAACU,KAAKC,SAAS,CA3pBcH,KACjDlI,EAAc1C,QAAQ,CAAG,EAC3B,CAAE,MAAOuF,EAAO,CACd3C,EAAkBgD,SAAS,WAAaL,EAAMuB,OAAS,CACvDpE,EAAc1C,QAAQ,CAAG,EAC3B,CACF,EAEA0C,EAAc+D,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAClC,GAAI,CACFhC,EAAiB+C,SAAS,OAASjF,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CACzDC,OAAQ,cACRc,OAAQ,CAACnE,EAAkBgD,SAAS,CAAEjF,OAAOmE,QAAQ,CAACkG,eAAe,CACvE,EACF,CAAE,MAAOzF,EAAO,CACd1C,EAAiB+C,SAAS,WAAaL,EAAMuB,OAAS,CAE1D,GAKAhE,EAAsB2D,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC1C7B,EAAiB4D,SAAS,CAAG,sBAC7B9D,EAAsB9C,QAAQ,CAAG,GACjC,GAAI,CAWF,IAQQqI,EAQAA,EAMAA,EAMAA,EAMAA,EAMAA,EAgBAA,EAxDF4C,EAAgB,iDAOhBC,GAEJ7C,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7B0C,YAAY,CAACF,GACTrC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAG5BxD,QAAQC,GAAG,CAAC,CAAE2F,cAAAA,EAAeC,iBAAAA,CAAiB,GAE9C,IAAME,GAEJ/C,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7B4C,YAAY,CAhBC,GAiBTzC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAGtByC,GAEJjD,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7B8C,cAAc,CAACxC,CAAAA,EAAAA,EAAAA,EAAAA,EArBF,+CAsBTH,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAGtB2C,GAEJnD,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7BC,aAAa,CA1BH,UA2BNE,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAGtB4C,GAEJpD,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7BC,aAAa,CA/BN,KAgCHE,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAGtB6C,GAEJrD,CADMA,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,EAC7BC,aAAa,CApCP,GAqCFE,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAEtBC,EAAO,CACXC,CAAAA,EAAAA,EAAAA,EAAAA,EAASmC,GACTnC,CAAAA,EAAAA,EAAAA,EAAAA,EAASqC,GACTrC,CAAAA,EAAAA,EAAAA,EAAAA,EAASuC,GACTvC,CAAAA,EAAAA,EAAAA,EAAAA,EAASyC,GACTzC,CAAAA,EAAAA,EAAAA,EAAAA,EAAS0C,GACT1C,CAAAA,EAAAA,EAAAA,EAAAA,EAAS2C,GACV,CACDrG,QAAQC,GAAG,CAAC,CAAE4F,iBAAAA,EAAkBpC,KAAAA,CAAK,GACrC,IAAME,EAAiBT,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,oBAA6B,CA9DlD,0EACa,EAAE,CA6DwDO,GAEnEG,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAM3B,IAAMG,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAC9B,IAAMuC,EAAkB,MAASrL,EAAiBkJ,kBAAkB,CAACJ,GACrE/D,QAAQC,GAAG,CAAC,CAAEqG,mBAAAA,CAAmB,GACjC3I,EAAiB4D,SAAS,CAAG,6BAC7B9D,EAAsB9C,QAAQ,CAAG,EACnC,CAAE,MAAOuF,EAAO,CAGd,MAFAvC,EAAiB4D,SAAS,CAAG,0BAC7B9D,EAAsB9C,QAAQ,CAAG,GAC3BuF,CACR,CACF,GAEAxC,EAA0B0D,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC9C7B,EAAiB4D,SAAS,CAAG,oBAC7B7D,EAA0B/C,QAAQ,CAAG,GACrC,GAAI,CAIF,IAAMgK,EAAM,MAAS,IAAI4B,QAAQ,SAACC,CAAO,CAAEC,CAAM,CAAK,CACpD,OAAOxL,EACJyL,IAAI,CALU,wBAKG,CAJN,qCAKH,iHAER,EACAC,IAAI,CAAC,SAAChC,CAAM,CAAK,CACZA,EACF6B,EAAQ7B,EAAO9C,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,MAAS,CAAC,KAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAO,EAE3D4E,EAAO,MAAU,gBAErB,EACJ,EACA9I,CAAAA,EAAiB4D,SAAS,CAAGoD,EAC7BjH,EAA0B/C,QAAQ,CAAG,EACvC,CAAE,MAAOuF,EAAO,CAGd,MAFAvC,EAAiB4D,SAAS,CAAGkE,KAAKC,SAAS,CAACxF,GAC5CxC,EAA0B/C,QAAQ,CAAG,GAC/BuF,CACR,CACF,GAKAtC,EAAawD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACjC1B,EAAmByD,SAAS,CAAG,UAC/B3D,EAAajD,QAAQ,CAAG,GACxB,GAAI,CACF,IAAMiM,EAAgBnI,GAAeoI,MAAM,CACzC,SAACC,CAAM,SAAKA,EAAOC,OAAO,CAACC,WAAW,KAAOhL,EAAYuF,SAAS,CAACyF,WAAW,EAAE,GAElF,GAAIJ,CAAa,CAAC,EAAE,CAAE,CACpB,IA+BQ5D,EA/BF8D,EAASF,CAAa,CAAC,EAAE,CAEzBK,EAAatI,EAAoB,CAACrD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CACvE,GAAI,CAACC,EAIH,OAHA7L,OAAOwG,KAAK,CAAC,qDACbhE,EAAmByD,SAAS,CAAG,cAC/B3D,EAAajD,QAAQ,CAAG,GACjB,EAET,CACA,IAAM8I,EAAO,CACXqD,EAAOM,YAAY,CACnBN,EAAOO,SAAS,CAChBP,EAAOQ,IAAI,CACXR,EAAOS,GAAG,CACVT,EAAOU,MAAM,CACbV,EAAOW,KAAK,CACb,CAEKC,EAAU9I,EAAU,CAACtD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CAGpDvD,EAAc,MAAST,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,6BAAsC,CACjE+D,EAda,CAAC,+CAA+C,CAgB7DxD,EACAiE,GAII9D,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAQtBO,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,EAChC,CACF,CAAE,MAAO7D,EAAO,CAGd,MAFApC,EAAmByD,SAAS,CAAG,cAC/B3D,EAAajD,QAAQ,CAAG,GAClBuF,CACR,CACApC,EAAmByD,SAAS,CAAG,iBAC/B3D,EAAajD,QAAQ,CAAG,EAC1B,GAKAkD,EAAoBuD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACxC1B,EAAmByD,SAAS,CAAG,UAC/B1D,EAAoBlD,QAAQ,CAAG,GAC/B,GAAI,CACF,IAAMiM,EAAgBnI,GAAeoI,MAAM,CACzC,SAACC,CAAM,SAAKA,EAAOC,OAAO,CAACC,WAAW,KAAOhL,EAAYuF,SAAS,CAACyF,WAAW,EAAE,GAElF,GAAIJ,CAAa,CAAC,EAAE,CAAE,CACpB,IAAME,EAASF,CAAa,CAAC,EAAE,CAGzB3D,EAAS,CAAC,+CAA+C,CACzDQ,EAAO,CACXqD,EAAOM,YAAY,IAChBN,EAAOO,SAAS,MACdP,EAAOQ,IAAI,CAACK,KAAK,CAAC,GAAE,IACtBb,EAAOS,GAAG,OACd,CACDvH,QAAQC,GAAG,CAACwD,GACZ,IAAMmE,EAAS,MAAS,IAAIrB,QAAQ,SAACC,CAAO,CAAEC,CAAM,CAAK,CACvD,OAAOxL,EACJyL,IAAI,CAAC,mBAAoB,CACxB,CACE7B,YAbN,oEAcMC,UAAW7B,EACXQ,KAAAA,CACF,EACD,EACAkD,IAAI,CAAC,SAAChC,CAAM,CAAK,CACZA,GAAUkD,MAAMC,OAAO,CAACnD,IAAWA,EAAO3F,MAAM,CAClDwH,EAAQ7B,CAAM,CAAC,EAAE,EAEjB8B,EAAO,MAAU,gBAErB,EACJ,EACA3I,CAAAA,EAAmByD,SAAS,eAAiBqG,EAC7C/J,EAAoBlD,QAAQ,CAAG,EACjC,CACF,CAAE,MAAOuF,EAAO,CAGd,MAFApC,EAAmByD,SAAS,CAAG,cAC/B1D,EAAoBlD,QAAQ,CAAG,GACzBuF,CACR,CACF,GACF,EAiVA,SAASW,GAAkBH,CAAW,CAAE,CACtCV,QAAQC,GAAG,CAAC,sBAAuBS,GACnCb,GAAWa,EACX1E,EAAYuF,SAAS,CAAG1B,GACpB1D,EAAmBoF,SAAS,EAC9BpF,CAAAA,EAAmBoF,SAAS,CAAG1B,EAAAA,EAE7BQ,MACFgB,KAEFJ,IACF,CAEA,SAAS8G,GAAeC,CAAO,CAAE,CAC/BhI,QAAQC,GAAG,CAAC,mBAAoB+H,GAChCjM,EAAWwF,SAAS,CAAGyG,CACzB,CAEA,SAASC,GAAiB/C,CAAS,CAAE,CACnClF,QAAQC,GAAG,CAAC,qBAAsB+H,SAClCpM,EAAW2F,SAAS,CAAG2D,CACzB,CAEmC,SAAAgD,IAAA,CAUlC,MAAAA,CAVkCA,GAAA1I,CAAAA,EAAAA,EAAAA,CAAAA,EAAnC,WAAsC,CACpC,GAAI,CACF,IAAM2I,EAAS,MAAS7M,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAC9CC,OAAQ,UACV,GACAmH,GAAc,KAAMI,EAAU1N,EAAE,CAAC8H,QAAQ,CAAC,KAC1C0F,GAAiBE,EAAU1N,EAAE,CAC/B,CAAE,MAAO+G,EAAK,CACZxB,QAAQE,KAAK,CAACsB,EAChB,CACF,IAACV,KAAA,MAAAC,UAAA,CAID,GAjXAhD,EAAcqD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAClCvB,EAAUsD,SAAS,CAAG,wBACtBxD,EAAcpD,QAAQ,CAAG,GACzB,GAAI,CACF,IAgBQqI,EAhBFiE,EACJ,wEACIhE,EAAS,EAAE,CACXQ,EAAO,CAAC5E,GAAIzE,IAAI,CAAEyE,GAAIuJ,QAAQ,CAAEvJ,GAAIwJ,WAAW,CAAC,CAEhDX,EAAU9I,EAAU,CAACtD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CAC1DlH,QAAQC,GAAG,CAAC,CAAEgH,WAAAA,EAAYhE,OAAAA,EAAQQ,KAAAA,EAAMiE,QAAAA,CAAQ,GAEhD,IAAM/D,EAAc,MAAST,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,6BAAsC,CACjE+D,EACAhE,EACAQ,EACAiE,GAGI9D,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAM3B,IAAMG,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAC9B9F,EAAUsD,SAAS,CAAG,+BACtBxD,EAAcpD,QAAQ,CAAG,EAC3B,CAAE,MAAOuF,EAAO,CAGd,MAFAjC,EAAUsD,SAAS,CAAG,4BACtBxD,EAAcpD,QAAQ,CAAG,GACnBuF,CACR,CACF,GAKAlC,EAAkBoD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACtCvB,EAAUsD,SAAS,CAAG,4BACtBvD,EAAkBrD,QAAQ,CAAG,GAC7B,GAAI,CACF,IAgBQqI,EAhBFiE,EACJ,6EACIhE,EAAS,EAAE,CACXQ,EAAO,CAAC5E,GAAIzE,IAAI,CAAEyE,GAAIyJ,SAAS,CAAEzJ,GAAIwJ,WAAW,CAAC,CAEjDX,EAAU9I,EAAU,CAACtD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CAC1DlH,QAAQC,GAAG,CAAC,CAAEgH,WAAAA,EAAYhE,OAAAA,EAAQQ,KAAAA,EAAMiE,QAAAA,CAAQ,GAEhD,IAAM/D,EAAc,MAAST,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,6BAAsC,CACjE+D,EACAhE,EACAQ,EACAiE,GAGI9D,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAM3B,IAAMG,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAC9B9F,EAAUsD,SAAS,CAAG,mCACtBvD,EAAkBrD,QAAQ,CAAG,EAC/B,CAAE,MAAOuF,EAAO,CAGd,MAFAjC,EAAUsD,SAAS,CAAG,gCACtBvD,EAAkBrD,QAAQ,CAAG,GACvBuF,CACR,CACF,GAKAhC,EAAYkD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAChCvB,EAAUsD,SAAS,CAAG,sBACtBrD,EAAYvD,QAAQ,CAAG,GACvB,GAAI,CAEF,IAAMsI,EAAS,CACb,2DACA,+DACD,CACKQ,EAAO,CAAC,qCAAqC,CACnDzD,QAAQC,GAAG,CAACwD,GACZ,IAAM8E,EAAQ,MAAS,IAAIhC,QAAQ,SAACC,CAAO,CAAEC,CAAM,CAAK,CACtD,OAAOxL,EACJyL,IAAI,CAAC,mBAAoB,CACxB,CACE7B,YAXW,6BAYXC,UAAW7B,EACXQ,KAAAA,CACF,EACD,EACAkD,IAAI,CAAC,SAAChC,CAAM,CAAK,CACZA,GAAUkD,MAAMC,OAAO,CAACnD,IAAWA,EAAO3F,MAAM,CAClDwH,EAAQ7B,CAAM,CAAC,EAAE,EAEjB8B,EAAO,MAAU,gBAErB,EACJ,EACAxI,CAAAA,EAAUsD,SAAS,mBAAqBgH,EACxCrK,EAAYvD,QAAQ,CAAG,EACzB,CAAE,MAAOuF,EAAO,CAGd,MAFAjC,EAAUsD,SAAS,CAAG,0BACtBrD,EAAYvD,QAAQ,CAAG,GACjBuF,CACR,CACF,GAKA/B,EAAUiD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAC9BvB,EAAUsD,SAAS,CAAG,oBACtBpD,EAAUxD,QAAQ,CAAG,GACrB,GAAI,CACF,IAkBQqI,EAlBFiE,EAAa,iCACbhE,EAAS,CACb,2DACA,+DACD,CACKQ,EAAO,EAAE,CAETiE,EAAU9I,EAAU,CAACtD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CAC1DlH,QAAQC,GAAG,CAAC,CAAEgH,WAAAA,EAAYhE,OAAAA,EAAQQ,KAAAA,EAAMiE,QAAAA,CAAQ,GAEhD,IAAM/D,EAAc,MAAST,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,6BAAsC,CACjE+D,EACAhE,EACAQ,EACAiE,GAGI9D,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAM3B,IAAMG,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAC9B9F,EAAUsD,SAAS,CAAG,2BACtBpD,EAAUxD,QAAQ,CAAG,EACvB,CAAE,MAAOuF,EAAO,CAGd,MAFAjC,EAAUsD,SAAS,CAAG,wBACtBpD,EAAUxD,QAAQ,CAAG,GACfuF,CACR,CACF,GAKA9B,EAAYgD,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CAChCvB,EAAUsD,SAAS,CAAG,sBACtBnD,EAAYzD,QAAQ,CAAG,GACvB,GAAI,CACF,IAkBQqI,EAlBFiE,EAAa,mCACbhE,EAAS,CACb,2DACA,+DACD,CACKQ,EAAO,CAAC,EAAG,qCAAqC,CAEhDiE,EAAU9I,EAAU,CAACtD,OAAOmE,QAAQ,CAACyH,cAAc,CAAC,CAC1DlH,QAAQC,GAAG,CAAC,CAAEgH,WAAAA,EAAYhE,OAAAA,EAAQQ,KAAAA,EAAMiE,QAAAA,CAAQ,GAEhD,IAAM/D,EAAc,MAAST,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,6BAAsC,CACjE+D,EACAhE,EACAQ,EACAiE,GAGI9D,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAM3B,IAAMG,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CANV,CACfe,KAAMF,CACR,GAKA5D,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,GAC9B9F,EAAUsD,SAAS,CAAG,6BACtBnD,EAAYzD,QAAQ,CAAG,EACzB,CAAE,MAAOuF,EAAO,CAGd,MAFAjC,EAAUsD,SAAS,CAAG,0BACtBnD,EAAYzD,QAAQ,CAAG,GACjBuF,CACR,CACF,GAKA7B,EAAkB+C,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACtChB,GAAsB+C,SAAS,CAAG,4BAClClD,EAAkB1D,QAAQ,CAAG,GAE7B,GAAI,CACF,IAAMgK,EAAM,MAASrJ,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAC3CC,OAAQ,qBACRc,OAAQ,CAAC7B,EAAQ,CAAC,EAAE,CAAE,gCACxB,EACArB,CAAAA,GAAsB+C,SAAS,CAC7BoD,GAAUA,EAAO6D,GAAG,EAAI3F,SAAS8B,EAAO6D,GAAG,CAAE,IAAM,KAAO,KAAK,CACjEnK,EAAkB1D,QAAQ,CAAG,EAC/B,CAAE,MAAOuF,EAAO,CAGd,MAFA1B,GAAsB+C,SAAS,CAAG,gCAClClD,EAAkB1D,QAAQ,CAAG,GACvBuF,CACR,CACF,GAEA5B,GAAkB8C,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACtChB,GAAsB+C,SAAS,CAAG,UAClCvB,QAAQC,GAAG,CAAC,CAACJ,EAAQ,CAAC,EAAE,CAAC,EACzB,GAAI,CAKF,IAIQmD,EAJFW,EAAiBT,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,oBAA6B,CAJjC,gDACJ,EAAE,CACJ,EAAE,EAKTU,GACEZ,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,KAE5BxD,QAAQC,GAAG,CAAC,CAAE2D,aAAAA,CAAa,GAE3B,IAAMpB,EAAW,CACfsB,KAAMF,CACR,EAKA,GACE6E,CAAAA,EAAAA,EAAAA,EAAAA,EAAQC,EAAAA,EAAeA,EAAI,QAAS,QAAS,OAC7C7M,SAASC,cAAc,CAAC,0BAA0B+F,KAAK,CACvD,CACA,IAAM8G,EACJC,WAAW/M,SAASC,cAAc,CAAC,0BAA0B+F,KAAK,CAAE,KAAO,GAC7EW,CAAAA,EAASmG,sBAAsB,CAAGA,CACpC,CACA,IAAM/F,EAAcC,SAAShH,SAASC,cAAc,CAAC,oBAAoB+F,KAAK,CAAE,IAC5Ee,EAAc,GAChBJ,CAAAA,EAASI,WAAW,CAAGA,CAAAA,EAGzB,IAAMmB,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CAACP,GAC5BxC,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,EAChC,CAAE,MAAO7D,EAAO,CAEd,MADA1B,GAAsB+C,SAAS,CAAG,cAC5BrB,CACR,CACA1B,GAAsB+C,SAAS,CAAG,gBACpC,GAEAhD,GAAmB6C,OAAO,CAAA5B,CAAAA,EAAAA,EAAAA,CAAAA,EAAG,WAAY,CACvChB,GAAsB+C,SAAS,CAAG,WAClC,GAAI,CAKF,IAIQyB,EAJFW,EAAiBT,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,oBAA6B,CAJjC,iDACJ,EAAE,CACJ,EAAE,EAWTV,EAAW,CACfsB,IAAAA,EANMd,EAAK,IAAII,EAAAA,EAAAA,CAAAA,aAAiB,CAChCO,EAAeE,SAAS,CAACb,GAClBO,CAAAA,EAAAA,EAAAA,EAAAA,EAAQP,EAAGQ,QAAQ,IAK5B,EAEMZ,EAAcC,SAAShH,SAASC,cAAc,CAAC,oBAAoB+F,KAAK,CAAE,IAC5Ee,EAAc,GAChBJ,CAAAA,EAASI,WAAW,CAAGA,CAAAA,EAGzB,IAAMmB,EAAe,MAAS9I,EAC3B6H,SAAS,GACTC,wBAAwB,CAACP,GAC5BxC,QAAQC,GAAG,CAAC,CAAE8D,gBAAAA,CAAgB,EAChC,CAAE,MAAO7D,EAAO,CAEd,MADA1B,GAAsB+C,SAAS,CAAG,cAC5BrB,CACR,CACA1B,GAAsB+C,SAAS,CAAG,gBACpC,GAqCAN,KAEIvF,IAAuB,CACzBJ,OAAOmE,QAAQ,CAACoJ,0BAA0B,CAAG,GAC7CC,UAhBiC,CAAAZ,GAAApH,KAAA,MAAAC,UAAA,IAkBjC,GAAI,CACF,IAAML,GAAW,MAASpF,OAAOmE,QAAQ,CAACkB,OAAO,CAAC,CAChDC,OAAQ,cACV,GACAC,GAAkBH,GACpB,CAAE,MAAOc,EAAK,CACZxB,QAAQE,KAAK,CAAC,sCAAuCsB,EACvD,CAEAlG,OAAOmE,QAAQ,CAACsJ,EAAE,CAAC,eAAgBhB,IACnCzM,OAAOmE,QAAQ,CAACsJ,EAAE,CAAC,iBAAkBd,IACrC3M,OAAOmE,QAAQ,CAACsJ,EAAE,CAAC,kBAAmBlI,GACxC,CACF,GAAC,UA3pCe,QAAA3F,EAAA4F,KAAA,MAAAC,UAAA,IA4qClB,EAAG,EAAE,CACP,qBCnwCAoG,EAAA6B,OAAA,EAAkB","sources":["webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./components/starcoin/dapps.config.ts","webpack://_N_E/./components/starcoin/STCExample.tsx","webpack://_N_E/./components/starcoin/executor.js","webpack://_N_E/./components/starcoin/styles.module.scss","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/@noble/ed25519/lib/esm|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/brorand|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/ethereum-cryptography/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/ethereum-cryptography/node_modules/readable-stream/lib|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/hash-base/node_modules/readable-stream/lib|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/rlp/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/tweetnacl-util|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/tweetnacl|crypto","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport styles from '../../styles/Home.module.css';\n\ninterface DApp {\n  name: string;\n  url: string;\n}\n\ninterface Props {\n  dapps: DApp[];\n}\n\nfunction DAppList(props: Props) {\n  const { dapps } = props;\n\n  return (\n    <div className={styles.container}>\n      <h3>Top DApps</h3>\n      <ul>\n        {dapps.map((dapp) => (\n          <li key={dapp.name}>\n            <a href={dapp.url} target={'_blank'}>\n              {dapp.name} ↗\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { DAppList };\n","export const dapps = [\n  {\n    name: 'Starswap',\n    url: 'https://starswap.xyz/#/swap',\n  },\n  {\n    name: 'KikoVerse',\n    url: 'https://kikoverse.com/',\n  },\n];\n","import React from 'react';\nimport Head from 'next/head';\n\nimport { useExecutor } from './executor';\n\nimport styles from './styles.module.scss';\nimport { DAppList } from '../dappList/DAppList';\nimport { dapps } from './dapps.config';\n\nexport default function STCExample() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  useExecutor();\n\n  return (\n    <main className={`${styles.main} container-fluid`}>\n      <Head>\n        <title>Starcoin E2E Test Dapp</title>\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Head>\n      <header>\n        <div id=\"logo-container\">\n          <img src=\"/starcoin-logo.svg\" />\n          <h1 id=\"logo-text\" className=\"text-center\">\n            Starcoin E2E Test Dapp\n          </h1>\n        </div>\n      </header>\n      <section>\n        <h3 className=\"card-title\">Status</h3>\n\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\n            <p className=\"info-text alert alert-primary\">\n              Network: <span id=\"network\" />\n            </p>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\n            <p className=\"info-text alert alert-secondary\">\n              ChainId: <span id=\"chainId\" />\n            </p>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\n            <p className=\"info-text alert alert-success\">\n              SelectedAccount: <span id=\"accounts\" />\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Basic Actions</h4>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"connectButton\"\n                  disabled\n                >\n                  Connect\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"getAccounts\" disabled>\n                  Get Selected Account\n                </button>\n\n                <p className=\"info-text alert alert-secondary\">\n                  SelectedAccount: <span id=\"getAccountsResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Permissions Actions</h4>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"requestPermissions\"\n                  disabled\n                >\n                  Request Permissions\n                </button>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"getPermissions\"\n                  disabled\n                >\n                  Get Permissions\n                </button>\n\n                <p className=\"info-text alert alert-secondary\">\n                  Permissions result: <span id=\"permissionsResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Send STC</h4>\n                <h5 className=\"card-title\">To</h5>\n                <div className=\"form-outline mb-3\">\n                  <input\n                    id=\"toAccountInput\"\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    defaultValue=\"0x46ecE7c1e39fb6943059565E2621b312\"\n                  />\n                </div>\n\n                <h5 className=\"card-title\">Amount of STC</h5>\n                <div className=\"form-outline mb-3\">\n                  <input\n                    id=\"amountInput\"\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    defaultValue=\"0.001\"\n                  />\n                </div>\n\n                <h5 className=\"card-title\">Transaction Expired Seconds(default 30 minutes)</h5>\n                <div className=\"form-outline mb-3\">\n                  <input\n                    id=\"expiredSecsInput\"\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    defaultValue=\"1800\"\n                  />\n                </div>\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"sendButton\" disabled>\n                  Send\n                </button>\n                <hr />\n                <h4 className=\"card-title\">Contract Function</h4>\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"callContractButton\"\n                  disabled\n                >\n                  0x1::TransferScripts::peer_to_peer_v2\n                </button>\n\n                <p className=\"info-text alert alert-secondary\">\n                  Contract Status: <span id=\"contractStatus2\">Not clicked</span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Contract blob hex</h4>\n                <div className=\"form-outline mb-3\">\n                  <textarea\n                    id=\"contractPayloadhex\"\n                    className=\"form-control\"\n                    rows={5}\n                    placeholder=\"search `payloadInHex` in index.js, generate your payloadInHex and paste it here\"\n                  />\n                </div>\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"deployButton\"\n                  disabled\n                >\n                  Deploy Contract using blob hex\n                </button>\n                <hr />\n                <h4 className=\"card-title\">Contract Function</h4>\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"tokenAddressButton\"\n                  disabled\n                >\n                  address::ABC::token_address\n                </button>\n\n                <p className=\"info-text alert alert-secondary\">\n                  Contract Status: <span id=\"contractStatus\">Not clicked</span>\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Call Contract function</h4>\n                <h5 className=\"card-title\">Module ID/Function ID</h5>\n                <div className=\"form-outline mb-3\">\n                  <input\n                    id=\"moduleIdInput\"\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    defaultValue=\"0x1::NFTGalleryScripts\"\n                  />\n                </div>\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"resolveModuleButton\">\n                  Resolve Functions\n                </button>\n\n                <h4 className=\"card-title\">Module Functions:</h4>\n\n                <p id=\"resolveResultView\" className=\"info-text alert alert-warning\">\n                  Result: <span className=\"tips\" />\n                </p>\n\n                <div id=\"moduleFunctionsDiv\" className=\"list-group\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4>Personal Sign</h4>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"personalSign\"\n                  disabled\n                >\n                  Sign\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  Result: <span id=\"personalSignResult\" />\n                </p>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"personalSignVerify\"\n                  disabled\n                >\n                  Verify\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  @starcoin/starcoin recovery result:\n                  <span id=\"personalSignRecoverResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Encrypt / Decrypt</h4>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"getEncryptionKeyButton\"\n                  disabled\n                >\n                  Get Encryption Key\n                </button>\n\n                <hr />\n\n                <div id=\"encrypt-message-form\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Message to encrypt\"\n                    id=\"encryptMessageInput\"\n                  />\n\n                  <button\n                    className=\"btn btn-primary btn-lg btn-block mb-3\"\n                    id=\"encryptButton\"\n                    disabled\n                  >\n                    Encrypt\n                  </button>\n                </div>\n\n                <hr />\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"decryptButton\"\n                  disabled\n                >\n                  Decrypt\n                </button>\n\n                <p className=\"info-text alert alert-secondary\">\n                  Encryption key: <span id=\"encryptionKeyDisplay\" />\n                </p>\n\n                <p className=\"info-text text-truncate alert alert-secondary\">\n                  Ciphertext: <span id=\"ciphertextDisplay\" />\n                </p>\n\n                <p className=\"info-text alert alert-secondary\">\n                  Cleartext: <span id=\"cleartextDisplay\" />\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4>Cross Chain</h4>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"crossChainLockWithSTC\"\n                >\n                  Lock With STC\n                </button>\n\n                <button\n                  className=\"btn btn-primary btn-lg btn-block mb-3\"\n                  id=\"crossChainGetLockTreasury\"\n                >\n                  Get Lock Treasury\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  Result: <span id=\"crossChainResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4>Airdrop</h4>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"claimAirdrop\">\n                  Claim\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"checkClaimedAirdrop\">\n                  Check Claimed\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  Result: <span id=\"claimAirdropResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4>NFT</h4>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"mintWithImage\">\n                  mint with image\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"mintWithImageData\">\n                  mint with image data\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"isAcceptNFT\">\n                  check is accept NFT\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"acceptNFT\">\n                  accept NFT\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"transferNFT\">\n                  transfer NFT\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  Result: <span id=\"nftResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12 d-flex align-items-stretch\">\n            <div className=\"card full-width\">\n              <div className=\"card-body\">\n                <h4>AutoAcceptToken</h4>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"isAutoAcceptToken\">\n                  Check Status\n                </button>\n\n                <h5 className=\"card-title\">AddGasBufferMultiplier(default 1.5)</h5>\n                <div className=\"form-outline mb-3\">\n                  <input\n                    id=\"addGasBufferMultiplier\"\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    defaultValue=\"1.5\"\n                  />\n                </div>\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"autoAcceptTokenOn\">\n                  Turn On\n                </button>\n\n                <button className=\"btn btn-primary btn-lg btn-block mb-3\" id=\"autoAcceptTokenOff\">\n                  Turn Offf\n                </button>\n\n                <p className=\"info-text alert alert-warning\">\n                  Result: <span id=\"autoAcceptTokenResult\" />\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <DAppList dapps={dapps} />\n    </main>\n  );\n}\n","/* eslint-disable */\nimport { arrayify, hexlify } from '@ethersproject/bytes';\nimport BigNumber from 'bignumber.js';\nimport StarMaskOnboarding from '@starcoin/starmask-onboarding';\nimport { providers, utils, bcs, encoding, version as starcoinVersion } from '@starcoin/starcoin';\nimport { encrypt } from 'eth-sig-util';\nimport { compare } from 'compare-versions';\nimport { useEffect } from 'react';\nimport Constants from './constants.json';\n\nexport function useExecutor() {\n  useEffect(() => {\n    let starcoinProvider;\n\n    const currentUrl = new URL(window.location.href);\n    const forwarderOrigin =\n      currentUrl.hostname === 'localhost' ? 'http://localhost:3000' : undefined;\n\n    const { isStarMaskInstalled } = StarMaskOnboarding;\n\n    // Dapp Status Section\n    const networkDiv = document.getElementById('network');\n    const chainIdDiv = document.getElementById('chainId');\n    const accountsDiv = document.getElementById('accounts');\n\n    // Basic Actions Section\n    const onboardButton = document.getElementById('connectButton');\n    const getAccountsButton = document.getElementById('getAccounts');\n    const getAccountsResults = document.getElementById('getAccountsResult');\n\n    // Permissions Actions Section\n    const requestPermissionsButton = document.getElementById('requestPermissions');\n    const getPermissionsButton = document.getElementById('getPermissions');\n    const permissionsResult = document.getElementById('permissionsResult');\n\n    // Send STC Section\n    const sendButton = document.getElementById('sendButton');\n    const callContractButton = document.getElementById('callContractButton');\n    const contractStatus2 = document.getElementById('contractStatus2');\n\n    // Contract Section\n    const contractPayloadhex = document.getElementById('contractPayloadhex');\n    const deployButton = document.getElementById('deployButton');\n    const tokenAddressButton = document.getElementById('tokenAddressButton');\n    const contractStatus = document.getElementById('contractStatus');\n\n    // Signature Section\n    const personalSign = document.getElementById('personalSign');\n    const personalSignResult = document.getElementById('personalSignResult');\n    const personalSignVerify = document.getElementById('personalSignVerify');\n    const personalSignRecoverResult = document.getElementById('personalSignRecoverResult');\n\n    // Encrypt / Decrypt Section\n    const getEncryptionKeyButton = document.getElementById('getEncryptionKeyButton');\n    const encryptMessageInput = document.getElementById('encryptMessageInput');\n    const encryptButton = document.getElementById('encryptButton');\n    const decryptButton = document.getElementById('decryptButton');\n    const encryptionKeyDisplay = document.getElementById('encryptionKeyDisplay');\n    const ciphertextDisplay = document.getElementById('ciphertextDisplay');\n    const cleartextDisplay = document.getElementById('cleartextDisplay');\n\n    // Cross Chain\n    const crossChainLockWithSTC = document.getElementById('crossChainLockWithSTC');\n    const crossChainGetLockTreasury = document.getElementById('crossChainGetLockTreasury');\n    const crossChainResult = document.getElementById('crossChainResult');\n\n    // Airdrop Section\n    const claimAirdrop = document.getElementById('claimAirdrop');\n    const checkClaimedAirdrop = document.getElementById('checkClaimedAirdrop');\n    const claimAirdropResult = document.getElementById('claimAirdropResult');\n\n    // NFT Section\n    const mintWithImage = document.getElementById('mintWithImage');\n    const mintWithImageData = document.getElementById('mintWithImageData');\n    const nftResult = document.getElementById('nftResult');\n    const isAcceptNFT = document.getElementById('isAcceptNFT');\n    const acceptNFT = document.getElementById('acceptNFT');\n    const transferNFT = document.getElementById('transferNFT');\n\n    // AutoAcceptToken Section\n    const isAutoAcceptToken = document.getElementById('isAutoAcceptToken');\n    const autoAcceptTokenOn = document.getElementById('autoAcceptTokenOn');\n    const autoAcceptTokenOff = document.getElementById('autoAcceptTokenOff');\n    const autoAcceptTokenResult = document.getElementById('autoAcceptTokenResult');\n\n    const { airdropRecords, airdropFunctionIdMap, nodeUrlMap, nft } = Constants;\n\n    const initialize = async () => {\n      try {\n        if (window.starcoin) {\n          // We must specify the network as 'any' for starcoin to allow network changes\n          starcoinProvider = new providers.Web3Provider(window.starcoin, 'any');\n          const blocknumber = await starcoinProvider.getBlockNumber();\n          console.log({ blocknumber });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      let onboarding;\n      try {\n        onboarding = new StarMaskOnboarding({ forwarderOrigin });\n      } catch (error) {\n        console.error(error);\n      }\n\n      let accounts;\n      let accountButtonsInitialized = false;\n\n      const accountButtons = [\n        getAccountsButton,\n        requestPermissionsButton,\n        getPermissionsButton,\n        sendButton,\n        callContractButton,\n        deployButton,\n        tokenAddressButton,\n        personalSign,\n        personalSignVerify,\n        getEncryptionKeyButton,\n        encryptMessageInput,\n        encryptButton,\n        decryptButton,\n        claimAirdrop,\n        checkClaimedAirdrop,\n        crossChainLockWithSTC,\n        crossChainGetLockTreasury,\n        mintWithImage,\n        mintWithImageData,\n        isAcceptNFT,\n        acceptNFT,\n        transferNFT,\n        isAutoAcceptToken,\n        autoAcceptTokenOn,\n        autoAcceptTokenOff,\n      ];\n\n      const isStarMaskConnected = () => accounts && accounts.length > 0;\n\n      const onClickInstall = () => {\n        onboardButton.innerText = 'Onboarding in progress';\n        onboardButton.disabled = true;\n        onboarding.startOnboarding();\n      };\n\n      const onClickConnect = async () => {\n        try {\n          const newAccounts = await window.starcoin.request({\n            method: 'stc_requestAccounts',\n          });\n          handleNewAccounts(newAccounts);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      const clearTextDisplays = () => {\n        // encryptionKeyDisplay.innerText = ''\n        // encryptMessageInput.value = ''\n        // ciphertextDisplay.innerText = ''\n        // cleartextDisplay.innerText = ''\n      };\n\n      const updateButtons = () => {\n        const accountButtonsDisabled = !isStarMaskInstalled() || !isStarMaskConnected();\n        if (accountButtonsDisabled) {\n          for (const button of accountButtons) {\n            button.disabled = true;\n          }\n          clearTextDisplays();\n        } else {\n          getAccountsButton.disabled = false;\n          requestPermissionsButton.disabled = false;\n          getPermissionsButton.disabled = false;\n          sendButton.disabled = false;\n          callContractButton.disabled = false;\n          deployButton.disabled = false;\n          personalSign.disabled = false;\n          getEncryptionKeyButton.disabled = false;\n          claimAirdrop.disabled = false;\n          checkClaimedAirdrop.disabled = false;\n          mintWithImage.disabled = false;\n          crossChainLockWithSTC.disabled = false;\n          crossChainGetLockTreasury.disabled = false;\n          mintWithImageData.disabled = false;\n          isAcceptNFT.disabled = false;\n          acceptNFT.disabled = false;\n          transferNFT.disabled = false;\n          isAutoAcceptToken.disabled = false;\n          autoAcceptTokenOn.disabled = false;\n          autoAcceptTokenOff.disabled = false;\n        }\n\n        if (!isStarMaskInstalled()) {\n          onboardButton.innerText = 'Click here to install StarMask!';\n          onboardButton.onclick = onClickInstall;\n          onboardButton.disabled = false;\n        } else if (isStarMaskConnected()) {\n          onboardButton.innerText = 'Connected';\n          onboardButton.disabled = true;\n          if (onboarding) {\n            onboarding.stopOnboarding();\n          }\n        } else {\n          onboardButton.innerText = 'Connect';\n          onboardButton.onclick = onClickConnect;\n          onboardButton.disabled = false;\n        }\n      };\n\n      const initializeAccountButtons = () => {\n        if (accountButtonsInitialized) {\n          return;\n        }\n        accountButtonsInitialized = true;\n\n        getAccountsButton.onclick = async () => {\n          try {\n            const _accounts = await window.starcoin.request({\n              method: 'stc_accounts',\n            });\n            getAccountsResults.innerHTML = _accounts[0] || 'Not able to get accounts';\n          } catch (err) {\n            console.error(err);\n            getAccountsResults.innerHTML = `Error: ${err.message}`;\n          }\n        };\n\n        /**\n         * Permissions\n         */\n\n        requestPermissionsButton.onclick = async () => {\n          try {\n            permissionsResult.innerHTML = '';\n            const permissionsArray = await window.starcoin.request({\n              method: 'wallet_requestPermissions',\n              params: [{ stc_accounts: {} }],\n            });\n            permissionsResult.innerHTML = getPermissionsDisplayString(permissionsArray);\n          } catch (err) {\n            console.error(err);\n            permissionsResult.innerHTML = `Error: ${err.message}`;\n          }\n        };\n\n        getPermissionsButton.onclick = async () => {\n          try {\n            permissionsResult.innerHTML = '';\n            const permissionsArray = await window.starcoin.request({\n              method: 'wallet_getPermissions',\n            });\n            permissionsResult.innerHTML = getPermissionsDisplayString(permissionsArray);\n          } catch (err) {\n            console.error(err);\n            permissionsResult.innerHTML = `Error: ${err.message}`;\n          }\n        };\n\n        /**\n         * Sending STC\n         */\n\n        sendButton.onclick = async () => {\n          console.log('sendButton.onclick');\n\n          const toAccount = document.getElementById('toAccountInput').value;\n          if (!toAccount) {\n            // eslint-disable-next-line no-alert\n            window.alert('Invalid To: can not be empty!');\n            return false;\n          }\n\n          const sendAmount = parseFloat(document.getElementById('amountInput').value, 10);\n          if (!(sendAmount > 0)) {\n            // eslint-disable-next-line no-alert\n            window.alert('Invalid sendAmount: should be a number!');\n            return false;\n          }\n          const BIG_NUMBER_NANO_STC_MULTIPLIER = new BigNumber('1000000000');\n          const sendAmountSTC = new BigNumber(\n            String(document.getElementById('amountInput').value),\n            10,\n          );\n          const sendAmountNanoSTC = sendAmountSTC.times(BIG_NUMBER_NANO_STC_MULTIPLIER);\n          const sendAmountHex = `0x${sendAmountNanoSTC.toString(16)}`;\n          console.log({ sendAmountHex, sendAmountNanoSTC: sendAmountNanoSTC.toString(10) });\n\n          const txParams = {\n            to: toAccount,\n            value: sendAmountHex,\n            gasLimit: 4000000,\n            gasPrice: 1,\n          };\n\n          const expiredSecs = parseInt(document.getElementById('expiredSecsInput').value, 10);\n          console.log({ expiredSecs });\n          if (expiredSecs > 0) {\n            txParams.expiredSecs = expiredSecs;\n          }\n\n          console.log({ txParams });\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log(transactionHash);\n        };\n\n        callContractButton.onclick = async () => {\n          contractStatus2.innerHTML = 'Calling';\n          callContractButton.disabled = true;\n          try {\n            const functionId = '0x1::TransferScripts::peer_to_peer_v2';\n            const strTypeArgs = ['0x1::STC::STC'];\n            const tyArgs = utils.tx.encodeStructTypeTags(strTypeArgs);\n\n            const toAccount = document.getElementById('toAccountInput').value;\n            if (!toAccount) {\n              // eslint-disable-next-line no-alert\n              window.alert('Invalid To: can not be empty!');\n              return false;\n            }\n            console.log({ toAccount });\n\n            const sendAmount = parseFloat(document.getElementById('amountInput').value, 10);\n            if (!(sendAmount > 0)) {\n              // eslint-disable-next-line no-alert\n              window.alert('Invalid sendAmount: should be a number!');\n              return false;\n            }\n            const BIG_NUMBER_NANO_STC_MULTIPLIER = new BigNumber('1000000000');\n            const sendAmountSTC = new BigNumber(\n              String(document.getElementById('amountInput').value),\n              10,\n            );\n            const sendAmountNanoSTC = sendAmountSTC.times(BIG_NUMBER_NANO_STC_MULTIPLIER);\n            const sendAmountHex = `0x${sendAmountNanoSTC.toString(16)}`;\n\n            // Multiple BcsSerializers should be used in different closures, otherwise, the latter will be contaminated by the former.\n            const amountSCSHex = (function () {\n              const se = new bcs.BcsSerializer();\n              // eslint-disable-next-line no-undef\n              se.serializeU128(BigInt(sendAmountNanoSTC.toString(10)));\n              return hexlify(se.getBytes());\n            })();\n            console.log({\n              sendAmountHex,\n              sendAmountNanoSTC: sendAmountNanoSTC.toString(10),\n              amountSCSHex,\n            });\n\n            const args = [arrayify(toAccount), arrayify(amountSCSHex)];\n\n            const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args);\n            console.log(scriptFunction);\n\n            // Multiple BcsSerializers should be used in different closures, otherwise, the latter will be contaminated by the former.\n            const payloadInHex = (function () {\n              const se = new bcs.BcsSerializer();\n              scriptFunction.serialize(se);\n              return hexlify(se.getBytes());\n            })();\n            console.log({ payloadInHex });\n\n            const txParams = {\n              data: payloadInHex,\n            };\n\n            const expiredSecs = parseInt(document.getElementById('expiredSecsInput').value, 10);\n            console.log({ expiredSecs });\n            if (expiredSecs > 0) {\n              txParams.expiredSecs = expiredSecs;\n            }\n\n            console.log({ txParams });\n            const transactionHash = await starcoinProvider\n              .getSigner()\n              .sendUncheckedTransaction(txParams);\n            console.log({ transactionHash });\n            const MAX_CONFIRMED_NODES = 6;\n            contractStatus2.innerHTML = `Transaction is waiting confirmed `;\n            let timer = setInterval(async () => {\n              const txnInfo = await starcoinProvider.getTransactionInfo(transactionHash);\n              console.log({ txnInfo });\n              console.log(txnInfo.confirmations);\n              if (txnInfo.status === 'Executed') {\n                contractStatus2.innerHTML = `Transaction ${txnInfo.confirmations} confirmed `;\n                if (txnInfo.confirmations >= MAX_CONFIRMED_NODES) {\n                  clearInterval(timer);\n                  contractStatus2.innerHTML = 'Call Completed';\n                  callContractButton.disabled = false;\n                }\n              }\n            }, 3000);\n          } catch (error) {\n            contractStatus2.innerHTML = 'Call Failed';\n            callContractButton.disabled = false;\n            throw error;\n          }\n        };\n\n        /**\n         * Contract Interactions\n         */\n\n        deployButton.onclick = async () => {\n          let transactionHash;\n          contractStatus.innerHTML = 'Deploying';\n\n          try {\n            const packageHex = contractPayloadhex.value.trim();\n            if (!packageHex.length) {\n              alert('Contract blob hex is empty');\n            }\n            const transactionPayloadHex = encoding.packageHexToTransactionPayloadHex(packageHex);\n            transactionHash = await starcoinProvider.getSigner().sendUncheckedTransaction({\n              data: transactionPayloadHex,\n            });\n            console.log({ transactionHash });\n          } catch (error) {\n            contractStatus.innerHTML = 'Deployment Failed';\n            throw error;\n          }\n\n          console.log(\n            `Contract deployed! address: ${accounts[0]} transactionHash: ${transactionHash}`,\n          );\n          contractStatus.innerHTML = 'Deployed';\n          tokenAddressButton.disabled = false;\n          // console.log(contract)\n        };\n\n        tokenAddressButton.onclick = async () => {\n          contractStatus.innerHTML = 'contract method request started';\n          try {\n            const result = await starcoinProvider.call({\n              function_id: `${accounts[0]}::ABC::token_address`,\n              type_args: [],\n              args: [],\n            });\n            contractStatus.innerHTML = result[0];\n          } catch (error) {\n            console.log(error);\n            throw error;\n          }\n        };\n\n        let toTyArgs = function (inputEles) {\n          let tyArgs = [];\n          inputEles.each(function () {\n            tyArgs.push(jquery(this).val());\n          });\n          return tyArgs;\n        };\n\n        let toArgs = function (inputEles) {\n          let argTypes = [];\n          let args = [];\n\n          inputEles.each(function () {\n            let argEle = jquery(this);\n            let argType = argEle.attr('placeholder').toLowerCase();\n            let argVal = argEle.val();\n\n            argTypes.push(argType);\n\n            // Move has few built-in primitive types to represent numbers,\n            // addresses and boolean values: integers (u8, u64, u128), boolean and address\n            if (argType.startsWith('u')) {\n              let val = parseInt(argVal);\n              args.push(val);\n            } else if (argType == 'bool') {\n              let val = JSON.parse(argVal);\n              args.push(val);\n            } else {\n              args.push(argVal);\n            }\n          });\n\n          // Remove the first Signer type\n          if (argTypes[0] === 'signer') {\n            argTypes.shift();\n            args.shift();\n          }\n\n          return args;\n        };\n\n        let toJsonArgs = function (inputEles) {\n          let argTypes = [];\n          let args = [];\n\n          inputEles.each(function () {\n            let argEle = jquery(this);\n            let argType = argEle.attr('placeholder').toLowerCase();\n            let argVal = argEle.val();\n\n            argTypes.push(argType);\n\n            // Move has few built-in primitive types to represent numbers,\n            // addresses and boolean values: integers (u8, u64, u128), boolean and address\n            if (argType.startsWith('u')) {\n              if (argType == 'u8') {\n                let val = parseInt(argVal);\n                args.push(val);\n              } else {\n                args.push(`${argVal}${argType}`);\n              }\n            } else if (argType == 'bool') {\n              let val = JSON.parse(argVal);\n              args.push(val);\n            } else if (argType == 'vector<u8>') {\n              args.push(`x\"${argVal}\"`);\n            } else {\n              args.push(argVal);\n            }\n          });\n\n          // Remove the first Signer type\n          if (argTypes[0] === 'signer') {\n            argTypes.shift();\n            args.shift();\n          }\n\n          return args;\n        };\n\n        /**\n         * Personal Sign\n         */\n        personalSign.onclick = async () => {\n          const exampleMessage = 'Example `personal_sign` message 中文';\n          try {\n            personalSignResult.innerHTML = '';\n            personalSignVerify.disabled = false;\n            personalSignRecoverResult.innerHTML = '';\n            const from = accounts[0];\n            const msg = `0x${Buffer.from(exampleMessage, 'utf8').toString('hex')}`;\n            console.log({ msg });\n            const networkId = networkDiv.innerHTML;\n            const extraParams = { networkId };\n            const sign = await window.starcoin.request({\n              method: 'personal_sign',\n              // params: [msg, from, 'Example password'],\n              // extraParams = params[2] || {}; means it should be an object:\n              // params: [msg, from, { pwd: 'Example password' }],\n              params: [msg, from, extraParams],\n            });\n            personalSignResult.innerHTML = sign;\n          } catch (err) {\n            console.error(err);\n            personalSign.innerHTML = `Error: ${err.message}`;\n          }\n        };\n\n        /**\n         * Personal Sign Verify\n         */\n        personalSignVerify.onclick = async () => {\n          try {\n            const from = accounts[0];\n            const sign = personalSignResult.innerHTML;\n            const recoveredAddr = await utils.signedMessage.recoverSignedMessageAddress(sign);\n            console.log({ recoveredAddr });\n\n            if (recoveredAddr === from) {\n              console.log(`@starcoin/starcoin Successfully verified signer as ${recoveredAddr}`);\n              personalSignRecoverResult.innerHTML = recoveredAddr;\n            } else {\n              console.log('@starcoin/starcoin Failed to verify signer');\n            }\n          } catch (err) {\n            console.error(err);\n            personalSignRecoverResult.innerHTML = `Error: ${err.message}`;\n          }\n        };\n\n        /**\n         * Encrypt / Decrypt\n         */\n\n        getEncryptionKeyButton.onclick = async () => {\n          try {\n            const publicKey = await window.starcoin.request({\n              method: 'stc_getEncryptionPublicKey',\n              params: [accounts[0]],\n            });\n            encryptionKeyDisplay.innerText = publicKey;\n            encryptMessageInput.disabled = false;\n          } catch (error) {\n            encryptionKeyDisplay.innerText = `Error: ${error.message}`;\n            encryptMessageInput.disabled = true;\n            encryptButton.disabled = true;\n            decryptButton.disabled = true;\n          }\n        };\n\n        encryptMessageInput.onkeyup = () => {\n          if (!getEncryptionKeyButton.disabled && encryptMessageInput.value.length > 0) {\n            if (encryptButton.disabled) {\n              encryptButton.disabled = false;\n            }\n          } else if (!encryptButton.disabled) {\n            encryptButton.disabled = true;\n          }\n        };\n\n        encryptButton.onclick = () => {\n          try {\n            const ecrryptResult = encrypt(\n              encryptionKeyDisplay.innerText,\n              { 'data': encryptMessageInput.value },\n              'x25519-xsalsa20-poly1305',\n            );\n            ciphertextDisplay.innerText = stringifiableToHex(ecrryptResult);\n            decryptButton.disabled = false;\n          } catch (error) {\n            ciphertextDisplay.innerText = `Error: ${error.message}`;\n            decryptButton.disabled = true;\n          }\n        };\n\n        decryptButton.onclick = async () => {\n          try {\n            cleartextDisplay.innerText = await window.starcoin.request({\n              method: 'stc_decrypt',\n              params: [ciphertextDisplay.innerText, window.starcoin.selectedAddress],\n            });\n          } catch (error) {\n            cleartextDisplay.innerText = `Error: ${error.message}`;\n          }\n        };\n\n        /**\n         * Cross Chain Lock with STC\n         */\n        crossChainLockWithSTC.onclick = async () => {\n          crossChainResult.innerHTML = 'Calling LockWithSTC';\n          crossChainLockWithSTC.disabled = true;\n          try {\n            const functionId =\n              '0x18351d311d32201149a4df2a9fc2db8a::CrossChainScript::lock_with_stc_fee';\n            const tyArgs = [];\n            // const fromAssetHash = \"0x00000000000000000000000000000001::STC::STC\"\n            // const toChainId = 318\n            // const toAddress = \"0x18351d311d32201149a4df2a9fc2db8a\"\n            // const amount = 10000000\n            // const fee = 5000000\n            // const id = 1\n\n            const fromAssetHash = '0x18351d311d32201149a4df2a9fc2db8a::XETH::XETH';\n            const toChainId = 2;\n            const toAddress = '0x208d1ae5bb7fd323ce6386c443473ed660825d46';\n            const amount = 115555000000;\n            const fee = 5000000;\n            const id = 1;\n\n            const fromAssetHashHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeStr(fromAssetHash);\n              return hexlify(se.getBytes());\n            })();\n\n            console.log({ fromAssetHash, fromAssetHashHex });\n\n            const toChainIdHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeU64(toChainId);\n              return hexlify(se.getBytes());\n            })();\n\n            const toAddressHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeBytes(arrayify(toAddress));\n              return hexlify(se.getBytes());\n            })();\n\n            const amountHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeU128(amount);\n              return hexlify(se.getBytes());\n            })();\n\n            const feeHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeU128(fee);\n              return hexlify(se.getBytes());\n            })();\n\n            const idHex = (function () {\n              const se = new bcs.BcsSerializer();\n              se.serializeU128(id);\n              return hexlify(se.getBytes());\n            })();\n            const args = [\n              arrayify(fromAssetHashHex),\n              arrayify(toChainIdHex),\n              arrayify(toAddressHex),\n              arrayify(amountHex),\n              arrayify(feeHex),\n              arrayify(idHex),\n            ];\n            console.log({ fromAssetHashHex, args });\n            const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args);\n\n            const payloadInHex = (function () {\n              const se = new bcs.BcsSerializer();\n              scriptFunction.serialize(se);\n              return hexlify(se.getBytes());\n            })();\n            console.log({ payloadInHex });\n\n            const txParams = {\n              data: payloadInHex,\n            };\n\n            const transactionHash = await starcoinProvider\n              .getSigner()\n              .sendUncheckedTransaction(txParams);\n            console.log({ transactionHash });\n            const transactionReceipt = await starcoinProvider.getTransactionInfo(transactionHash);\n            console.log({ transactionReceipt });\n            crossChainResult.innerHTML = 'Call LockWithSTC Completed';\n            crossChainLockWithSTC.disabled = false;\n          } catch (error) {\n            crossChainResult.innerHTML = 'Call LockWithSTC Failed';\n            crossChainLockWithSTC.disabled = false;\n            throw error;\n          }\n        };\n\n        crossChainGetLockTreasury.onclick = async () => {\n          crossChainResult.innerHTML = 'Get Lock Treasury';\n          crossChainGetLockTreasury.disabled = true;\n          try {\n            const functionId = 'contract.get_resource';\n            const address = '0x18351d311d32201149a4df2a9fc2db8a';\n            const token = '0x18351d311d32201149a4df2a9fc2db8a::XETH::XETH';\n            const result = await new Promise((resolve, reject) => {\n              return starcoinProvider\n                .send(functionId, [\n                  address,\n                  `0x18351d311d32201149a4df2a9fc2db8a::LockProxy::LockTreasury<${token}>`,\n                ])\n                .then((result) => {\n                  if (result) {\n                    resolve(result.value[0][1]['Struct']['value'][0][1]['U128']);\n                  } else {\n                    reject(new Error('fetch failed'));\n                  }\n                });\n            });\n            crossChainResult.innerHTML = result;\n            crossChainGetLockTreasury.disabled = false;\n          } catch (error) {\n            crossChainResult.innerHTML = JSON.stringify(error);\n            crossChainGetLockTreasury.disabled = false;\n            throw error;\n          }\n        };\n\n        /**\n         * Claim Airdrop\n         */\n        claimAirdrop.onclick = async () => {\n          claimAirdropResult.innerHTML = 'Calling';\n          claimAirdrop.disabled = true;\n          try {\n            const filterResluts = airdropRecords.filter(\n              (record) => record.address.toLowerCase() === accountsDiv.innerHTML.toLowerCase(),\n            );\n            if (filterResluts[0]) {\n              const record = filterResluts[0];\n\n              const functionId = airdropFunctionIdMap[window.starcoin.networkVersion];\n              if (!module) {\n                window.alert('airdrop contract is not deployed on this network!');\n                claimAirdropResult.innerHTML = 'Call Failed';\n                claimAirdrop.disabled = false;\n                return false;\n              }\n              const tyArgs = ['0x00000000000000000000000000000001::STC::STC'];\n              const args = [\n                record.ownerAddress,\n                record.airDropId,\n                record.root,\n                record.idx,\n                record.amount,\n                record.proof,\n              ];\n\n              const nodeUrl = nodeUrlMap[window.starcoin.networkVersion];\n              // console.log({ functionId, tyArgs, args, nodeUrl })\n\n              const scriptFunction = await utils.tx.encodeScriptFunctionByResolve(\n                functionId,\n                tyArgs,\n                args,\n                nodeUrl,\n              );\n\n              // // Multiple BcsSerializers should be used in different closures, otherwise, the latter will be contaminated by the former.\n              const payloadInHex = (function () {\n                const se = new bcs.BcsSerializer();\n                scriptFunction.serialize(se);\n                return hexlify(se.getBytes());\n              })();\n              // console.log({ payloadInHex })\n\n              const txParams = {\n                data: payloadInHex,\n              };\n\n              const transactionHash = await starcoinProvider\n                .getSigner()\n                .sendUncheckedTransaction(txParams);\n              console.log({ transactionHash });\n            }\n          } catch (error) {\n            claimAirdropResult.innerHTML = 'Call Failed';\n            claimAirdrop.disabled = false;\n            throw error;\n          }\n          claimAirdropResult.innerHTML = 'Call Completed';\n          claimAirdrop.disabled = false;\n        };\n\n        /**\n         * Check is Claimed\n         */\n        checkClaimedAirdrop.onclick = async () => {\n          claimAirdropResult.innerHTML = 'Calling';\n          checkClaimedAirdrop.disabled = true;\n          try {\n            const filterResluts = airdropRecords.filter(\n              (record) => record.address.toLowerCase() === accountsDiv.innerHTML.toLowerCase(),\n            );\n            if (filterResluts[0]) {\n              const record = filterResluts[0];\n              const functionId =\n                '0xb987F1aB0D7879b2aB421b98f96eFb44::MerkleDistributor2::is_claimd';\n              const tyArgs = ['0x00000000000000000000000000000001::STC::STC'];\n              const args = [\n                record.ownerAddress,\n                `${record.airDropId}`,\n                `x\"${record.root.slice(2)}\"`,\n                `${record.idx}u64`,\n              ];\n              console.log(args);\n              const isClaimed = await new Promise((resolve, reject) => {\n                return starcoinProvider\n                  .send('contract.call_v2', [\n                    {\n                      function_id: functionId,\n                      type_args: tyArgs,\n                      args,\n                    },\n                  ])\n                  .then((result) => {\n                    if (result && Array.isArray(result) && result.length) {\n                      resolve(result[0]);\n                    } else {\n                      reject(new Error('fetch failed'));\n                    }\n                  });\n              });\n              claimAirdropResult.innerHTML = `Claimed is ${isClaimed}`;\n              checkClaimedAirdrop.disabled = false;\n            }\n          } catch (error) {\n            claimAirdropResult.innerHTML = 'Call Failed';\n            checkClaimedAirdrop.disabled = false;\n            throw error;\n          }\n        };\n      };\n\n      /**\n       * mint With Image\n       */\n      mintWithImage.onclick = async () => {\n        nftResult.innerHTML = 'Calling mintWithImage';\n        mintWithImage.disabled = true;\n        try {\n          const functionId =\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFTScripts::mint_with_image';\n          const tyArgs = [];\n          const args = [nft.name, nft.imageUrl, nft.description];\n\n          const nodeUrl = nodeUrlMap[window.starcoin.networkVersion];\n          console.log({ functionId, tyArgs, args, nodeUrl });\n\n          const scriptFunction = await utils.tx.encodeScriptFunctionByResolve(\n            functionId,\n            tyArgs,\n            args,\n            nodeUrl,\n          );\n\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n          console.log({ payloadInHex });\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n          nftResult.innerHTML = 'Call mintWithImage Completed';\n          mintWithImage.disabled = false;\n        } catch (error) {\n          nftResult.innerHTML = 'Call mintWithImage Failed';\n          mintWithImage.disabled = false;\n          throw error;\n        }\n      };\n\n      /**\n       * mint With Image Data\n       */\n      mintWithImageData.onclick = async () => {\n        nftResult.innerHTML = 'Calling mintWithImageData';\n        mintWithImageData.disabled = true;\n        try {\n          const functionId =\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFTScripts::mint_with_image_data';\n          const tyArgs = [];\n          const args = [nft.name, nft.imageData, nft.description];\n\n          const nodeUrl = nodeUrlMap[window.starcoin.networkVersion];\n          console.log({ functionId, tyArgs, args, nodeUrl });\n\n          const scriptFunction = await utils.tx.encodeScriptFunctionByResolve(\n            functionId,\n            tyArgs,\n            args,\n            nodeUrl,\n          );\n\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n          console.log({ payloadInHex });\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n          nftResult.innerHTML = 'Call mintWithImageData Completed';\n          mintWithImageData.disabled = false;\n        } catch (error) {\n          nftResult.innerHTML = 'Call mintWithImageData Failed';\n          mintWithImageData.disabled = false;\n          throw error;\n        }\n      };\n\n      /**\n       * Check is accept NFT\n       */\n      isAcceptNFT.onclick = async () => {\n        nftResult.innerHTML = 'Calling isAcceptNFT';\n        isAcceptNFT.disabled = true;\n        try {\n          const functionId = '0x1::NFTGallery::is_accept';\n          const tyArgs = [\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFT',\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFTBody',\n          ];\n          const args = ['0x3f19d5422824f47E6C021978CeE98f35'];\n          console.log(args);\n          const isAccept = await new Promise((resolve, reject) => {\n            return starcoinProvider\n              .send('contract.call_v2', [\n                {\n                  function_id: functionId,\n                  type_args: tyArgs,\n                  args,\n                },\n              ])\n              .then((result) => {\n                if (result && Array.isArray(result) && result.length) {\n                  resolve(result[0]);\n                } else {\n                  reject(new Error('fetch failed'));\n                }\n              });\n          });\n          nftResult.innerHTML = `isAcceptNFT is ${isAccept}`;\n          isAcceptNFT.disabled = false;\n        } catch (error) {\n          nftResult.innerHTML = 'Call isAcceptNFT Failed';\n          isAcceptNFT.disabled = false;\n          throw error;\n        }\n      };\n\n      /**\n       * accept NFT\n       */\n      acceptNFT.onclick = async () => {\n        nftResult.innerHTML = 'Calling acceptNFT';\n        acceptNFT.disabled = true;\n        try {\n          const functionId = '0x1::NFTGalleryScripts::accept';\n          const tyArgs = [\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFT',\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFTBody',\n          ];\n          const args = [];\n\n          const nodeUrl = nodeUrlMap[window.starcoin.networkVersion];\n          console.log({ functionId, tyArgs, args, nodeUrl });\n\n          const scriptFunction = await utils.tx.encodeScriptFunctionByResolve(\n            functionId,\n            tyArgs,\n            args,\n            nodeUrl,\n          );\n\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n          console.log({ payloadInHex });\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n          nftResult.innerHTML = 'Call acceptNFT Completed';\n          acceptNFT.disabled = false;\n        } catch (error) {\n          nftResult.innerHTML = 'Call acceptNFT Failed';\n          acceptNFT.disabled = false;\n          throw error;\n        }\n      };\n\n      /**\n       * transfer NFT\n       */\n      transferNFT.onclick = async () => {\n        nftResult.innerHTML = 'Calling transferNFT';\n        transferNFT.disabled = true;\n        try {\n          const functionId = '0x1::NFTGalleryScripts::transfer';\n          const tyArgs = [\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFT',\n            '0x2c5bd5fb513108d4557107e09c51656c::SimpleNFT::SimpleNFTBody',\n          ];\n          const args = [7, '0xD7f20bEFd34B9f1ab8aeae98b82a5A51'];\n\n          const nodeUrl = nodeUrlMap[window.starcoin.networkVersion];\n          console.log({ functionId, tyArgs, args, nodeUrl });\n\n          const scriptFunction = await utils.tx.encodeScriptFunctionByResolve(\n            functionId,\n            tyArgs,\n            args,\n            nodeUrl,\n          );\n\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n          console.log({ payloadInHex });\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n          nftResult.innerHTML = 'Call transferNFT Completed';\n          transferNFT.disabled = false;\n        } catch (error) {\n          nftResult.innerHTML = 'Call transferNFT Failed';\n          transferNFT.disabled = false;\n          throw error;\n        }\n      };\n\n      /**\n       * AutoAcceptToken\n       */\n      isAutoAcceptToken.onclick = async () => {\n        autoAcceptTokenResult.innerHTML = 'Calling isAutoAcceptToken';\n        isAutoAcceptToken.disabled = true;\n\n        try {\n          const result = await window.starcoin.request({\n            method: 'state.get_resource',\n            params: [accounts[0], '0x1::Account::AutoAcceptToken'],\n          });\n          autoAcceptTokenResult.innerHTML =\n            result && result.raw && parseInt(result.raw, 16) ? 'On' : 'Off';\n          isAutoAcceptToken.disabled = false;\n        } catch (error) {\n          autoAcceptTokenResult.innerHTML = 'Call isAutoAcceptToken Failed';\n          isAutoAcceptToken.disabled = false;\n          throw error;\n        }\n      };\n\n      autoAcceptTokenOn.onclick = async () => {\n        autoAcceptTokenResult.innerHTML = 'Turn On';\n        console.log([accounts[0]]);\n        try {\n          const functionId = '0x1::AccountScripts::enable_auto_accept_token';\n          const tyArgs = [];\n          const args = [];\n\n          const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args);\n\n          // Multiple BcsSerializers should be used in different closures, otherwise, the latter will be contaminated by the former.\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n          console.log({ payloadInHex });\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          // addGasBufferMultiplier is supported since:\n          // @starcoin/starcoin >= 1.8.0 and starmask >= 3.3.0\n          // so we need to check the version of @starcoin/starcoin before using it in the dapps\n          if (\n            compare(starcoinVersion || '1.0.0', '1.8.0', '>=') &&\n            document.getElementById('addGasBufferMultiplier').value\n          ) {\n            const addGasBufferMultiplier =\n              parseFloat(document.getElementById('addGasBufferMultiplier').value, 10) || 1.5;\n            txParams.addGasBufferMultiplier = addGasBufferMultiplier;\n          }\n          const expiredSecs = parseInt(document.getElementById('expiredSecsInput').value, 10);\n          if (expiredSecs > 0) {\n            txParams.expiredSecs = expiredSecs;\n          }\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n        } catch (error) {\n          autoAcceptTokenResult.innerHTML = 'Call Failed';\n          throw error;\n        }\n        autoAcceptTokenResult.innerHTML = 'Call Completed';\n      };\n\n      autoAcceptTokenOff.onclick = async () => {\n        autoAcceptTokenResult.innerHTML = 'Turn Off';\n        try {\n          const functionId = '0x1::AccountScripts::disable_auto_accept_token';\n          const tyArgs = [];\n          const args = [];\n\n          const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args);\n\n          // Multiple BcsSerializers should be used in different closures, otherwise, the latter will be contaminated by the former.\n          const payloadInHex = (function () {\n            const se = new bcs.BcsSerializer();\n            scriptFunction.serialize(se);\n            return hexlify(se.getBytes());\n          })();\n\n          const txParams = {\n            data: payloadInHex,\n          };\n\n          const expiredSecs = parseInt(document.getElementById('expiredSecsInput').value, 10);\n          if (expiredSecs > 0) {\n            txParams.expiredSecs = expiredSecs;\n          }\n\n          const transactionHash = await starcoinProvider\n            .getSigner()\n            .sendUncheckedTransaction(txParams);\n          console.log({ transactionHash });\n        } catch (error) {\n          autoAcceptTokenResult.innerHTML = 'Call Failed';\n          throw error;\n        }\n        autoAcceptTokenResult.innerHTML = 'Call Completed';\n      };\n\n      function handleNewAccounts(newAccounts) {\n        console.log('stc accountsChanged', newAccounts);\n        accounts = newAccounts;\n        accountsDiv.innerHTML = accounts;\n        if (getAccountsResults.innerHTML) {\n          getAccountsResults.innerHTML = accounts;\n        }\n        if (isStarMaskConnected()) {\n          initializeAccountButtons();\n        }\n        updateButtons();\n      }\n\n      function handleNewChain(chainId) {\n        console.log('stc chainChanged', chainId);\n        chainIdDiv.innerHTML = chainId;\n      }\n\n      function handleNewNetwork(networkId) {\n        console.log('stc networkChanged', chainId);\n        networkDiv.innerHTML = networkId;\n      }\n\n      async function getNetworkAndChainId() {\n        try {\n          const chainInfo = await window.starcoin.request({\n            method: 'chain.id',\n          });\n          handleNewChain(`0x${chainInfo.id.toString(16)}`);\n          handleNewNetwork(chainInfo.id);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n\n      updateButtons();\n\n      if (isStarMaskInstalled()) {\n        window.starcoin.autoRefreshOnNetworkChange = false;\n        getNetworkAndChainId();\n\n        try {\n          const newAccounts = await window.starcoin.request({\n            method: 'stc_accounts',\n          });\n          handleNewAccounts(newAccounts);\n        } catch (err) {\n          console.error('Error on init when getting accounts', err);\n        }\n\n        window.starcoin.on('chainChanged', handleNewChain);\n        window.starcoin.on('networkChanged', handleNewNetwork);\n        window.starcoin.on('accountsChanged', handleNewAccounts);\n      }\n    };\n\n    initialize();\n\n    // utils\n\n    function getPermissionsDisplayString(permissionsArray) {\n      if (permissionsArray.length === 0) {\n        return 'No permissions found.';\n      }\n      const permissionNames = permissionsArray.map((perm) => perm.parentCapability);\n      return permissionNames.reduce((acc, name) => `${acc}${name}, `, '').replace(/, $/u, '');\n    }\n\n    function stringifiableToHex(value) {\n      return hexlify(Buffer.from(JSON.stringify(value)));\n    }\n  }, []);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__pM6cO\"};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["DAppList","props","dapps","_jsxs","className","styles","children","_jsx","map","dapp","href","url","target","name","STCExample","useExecutor","Head","content","id","src","disabled","type","defaultValue","rows","placeholder","useEffect","starcoinProvider","_ref","forwarderOrigin","currentUrl","URL","window","location","hostname","undefined","isStarMaskInstalled","StarMaskOnboarding","networkDiv","document","getElementById","chainIdDiv","accountsDiv","onboardButton","getAccountsButton","getAccountsResults","requestPermissionsButton","getPermissionsButton","permissionsResult","sendButton","callContractButton","contractStatus2","contractPayloadhex","deployButton","tokenAddressButton","contractStatus","personalSign","personalSignResult","personalSignVerify","personalSignRecoverResult","getEncryptionKeyButton","encryptMessageInput","encryptButton","decryptButton","encryptionKeyDisplay","ciphertextDisplay","cleartextDisplay","crossChainLockWithSTC","crossChainGetLockTreasury","crossChainResult","claimAirdrop","checkClaimedAirdrop","claimAirdropResult","mintWithImage","mintWithImageData","nftResult","isAcceptNFT","acceptNFT","transferNFT","isAutoAcceptToken","autoAcceptTokenOn","autoAcceptTokenOff","autoAcceptTokenResult","airdropRecords","Constants","airdropFunctionIdMap","nodeUrlMap","nft","getPermissionsDisplayString","permissionsArray","length","permissionNames","perm","parentCapability","reduce","acc","replace","initialize","_asyncToGenerator","starcoin","providers","_ref2","onboarding","accounts","blocknumber","getBlockNumber","console","log","error","accountButtonsInitialized","accountButtons","isStarMaskConnected","onClickInstall","innerText","startOnboarding","onClickConnect","newAccounts","request","method","handleNewAccounts","apply","arguments","clearTextDisplays","updateButtons","button","stopOnboarding","onclick","initializeAccountButtons","_accounts","innerHTML","err","message","params","stc_accounts","toAccount","value","alert","sendAmount","BIG_NUMBER_NANO_STC_MULTIPLIER","BigNumber","sendAmountNanoSTC","sendAmountSTC","String","times","sendAmountHex","toString","txParams","to","gasLimit","gasPrice","expiredSecs","parseInt","getSigner","sendUncheckedTransaction","se","tyArgs","utils","amountSCSHex","bcs","serializeU128","BigInt","hexlify","getBytes","args","arrayify","scriptFunction","payloadInHex","serialize","data","transactionHash","timer","setInterval","txnInfo","getTransactionInfo","confirmations","status","clearInterval","packageHex","trim","transactionPayloadHex","encoding","result","call","function_id","type_args","from","msg","Buffer","networkId","sign","recoveredAddr","publicKey","onkeyup","ecrryptResult","encrypt","JSON","stringify","selectedAddress","fromAssetHash","fromAssetHashHex","serializeStr","toChainIdHex","serializeU64","toAddressHex","serializeBytes","amountHex","feeHex","idHex","transactionReceipt","Promise","resolve","reject","send","then","filterResluts","filter","record","address","toLowerCase","functionId","networkVersion","module","ownerAddress","airDropId","root","idx","amount","proof","nodeUrl","slice","isClaimed","Array","isArray","handleNewChain","chainId","handleNewNetwork","_getNetworkAndChainId","chainInfo","imageUrl","description","imageData","isAccept","raw","compare","starcoinVersion","addGasBufferMultiplier","parseFloat","autoRefreshOnNetworkChange","getNetworkAndChainId","on","exports"],"sourceRoot":""}